package electrocasnice;

import java.io.BufferedOutputStream;
import java.io.EOFException;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.ArrayList;
import javax.swing.JOptionPane;

public class ElectrocasniceGUI extends javax.swing.JFrame {

    private boolean verificaConditiiFiltrare(Aragaz aragaz) {
        boolean conditie1 = jCheckBox1.isSelected() && aragaz.isGrill();
        boolean conditie2 = jCheckBox2.isSelected() && aragaz.getNumar_arzatoare() >= 5 && aragaz.getNumar_arzatoare() <= 7;
        boolean conditie3 = jCheckBox3.isSelected() && (aragaz.getPret() >= 1.300f && aragaz.getPret() <= 1.900f);
        boolean conditie4 = jCheckBox4.isSelected() && aragaz.getBrand().equals("ELECTROLUX");
        boolean conditie5 = jCheckBox5.isSelected() && aragaz.getBrand().equals("ZANUSSI");

        return (jCheckBox1.isSelected() ? conditie1 : true)
                && (jCheckBox2.isSelected() ? conditie2 : true)
                && (jCheckBox3.isSelected() ? conditie3 : true)
                && (jCheckBox4.isSelected() ? conditie4 : true)
                && (jCheckBox5.isSelected() ? conditie5 : true);
    }

    boolean verificaConditiiFiltrareCuptor(Cuptor cuptor) {
        boolean conditie1 = jc1.isSelected() && cuptor.isTimer();
        boolean conditie2 = jc2.isSelected() && cuptor.getCapacitate() >= 70;
        boolean conditie3 = jc3.isSelected() && cuptor.getCapacitate() <= 75;
        boolean conditie4 = jc4.isSelected() && cuptor.getPret() >= 1.300f;
        boolean conditie5 = jc5.isSelected() && cuptor.getPret() <= 1.600f;
        boolean conditie6 = jc6.isSelected() && cuptor.getTipCuratare().equals("catalitica");
        boolean conditie7 = jc7.isSelected() && cuptor.getTipCuratare().equals("pirolitica");

        return (jc1.isSelected() ? conditie1 : true)
                && (jc2.isSelected() ? conditie2 : true)
                && (jc3.isSelected() ? conditie3 : true)
                && (jc4.isSelected() ? conditie4 : true)
                && (jc5.isSelected() ? conditie5 : true)
                && (jc6.isSelected() ? conditie6 : true)
                && (jc7.isSelected() ? conditie7 : true);
    }

    public ElectrocasniceGUI() {

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        btnAragaz = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jCheckBox4 = new javax.swing.JCheckBox();
        jButton2 = new javax.swing.JButton();
        jCheckBox5 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jCheckBox10 = new javax.swing.JCheckBox();
        jCheckBox11 = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jc1 = new javax.swing.JCheckBox();
        jc2 = new javax.swing.JCheckBox();
        jc3 = new javax.swing.JCheckBox();
        jc4 = new javax.swing.JCheckBox();
        jButton11 = new javax.swing.JButton();
        btnAragaz6 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextArea5 = new javax.swing.JTextArea();
        jc6 = new javax.swing.JCheckBox();
        jc5 = new javax.swing.JCheckBox();
        jc7 = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        clear_MasinaRufe = new javax.swing.JButton();
        button_toate_MasinileDeSpalatRufe = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Text_MasinaDeSpalatRufe = new javax.swing.JTextArea();
        button_MasinaDeSpalatRufe = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        clear_MasinaVase = new javax.swing.JButton();
        button_MasinaDeSpalatVase = new javax.swing.JButton();
        button_toate_MasinileDeSpalatVase = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        Text_MasinaDeSpalatVase = new javax.swing.JTextArea();
        jRadioButton7 = new javax.swing.JRadioButton();
        jRadioButton8 = new javax.swing.JRadioButton();
        jRadioButton9 = new javax.swing.JRadioButton();
        jRadioButton10 = new javax.swing.JRadioButton();
        jRadioButton11 = new javax.swing.JRadioButton();
        jRadioButton12 = new javax.swing.JRadioButton();
        jPanel6 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        button_frigider = new javax.swing.JButton();
        button_toateFrigiderele = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea9 = new javax.swing.JTextArea();
        jRadioButton13 = new javax.swing.JRadioButton();
        jRadioButton14 = new javax.swing.JRadioButton();
        jRadioButton15 = new javax.swing.JRadioButton();
        jRadioButton16 = new javax.swing.JRadioButton();
        jRadioButton17 = new javax.swing.JRadioButton();
        jRadioButton18 = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        button_Congelator = new javax.swing.JButton();
        button_toateCongelatoarele = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jRadioButton19 = new javax.swing.JRadioButton();
        jRadioButton20 = new javax.swing.JRadioButton();
        jRadioButton21 = new javax.swing.JRadioButton();
        jRadioButton22 = new javax.swing.JRadioButton();
        jRadioButton23 = new javax.swing.JRadioButton();
        jRadioButton24 = new javax.swing.JRadioButton();
        jPanel7 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButtonCitire = new javax.swing.JButton();
        jButtonScriere = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        jTextField12 = new javax.swing.JTextField();
        jTextField13 = new javax.swing.JTextField();
        jTextField14 = new javax.swing.JTextField();
        jTextField15 = new javax.swing.JTextField();
        jTextField16 = new javax.swing.JTextField();
        jTextField17 = new javax.swing.JTextField();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextAreaFisiere = new javax.swing.JTextArea();
        jTextField18 = new javax.swing.JTextField();
        jTextField19 = new javax.swing.JTextField();
        jTextField20 = new javax.swing.JTextField();
        jTextField21 = new javax.swing.JTextField();
        jTextField22 = new javax.swing.JTextField();
        jTextField23 = new javax.swing.JTextField();
        jTextField24 = new javax.swing.JTextField();
        jTextField25 = new javax.swing.JTextField();
        jTextField26 = new javax.swing.JTextField();
        jTextField27 = new javax.swing.JTextField();
        jTextField28 = new javax.swing.JTextField();
        jTextField29 = new javax.swing.JTextField();
        jTextField30 = new javax.swing.JTextField();
        jTextField31 = new javax.swing.JTextField();
        jTextField32 = new javax.swing.JTextField();
        jTextField33 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Produse");

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setFont(new java.awt.Font("SansSerif", 1, 10)); // NOI18N

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jCheckBox1.setText("Grill");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox3.setText("Pretul intre 1300 si 1900 lei");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Sa aiba intre 5 si 7 arzatoare");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        btnAragaz.setBackground(new java.awt.Color(204, 204, 204));
        btnAragaz.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnAragaz.setText("Filtrare");
        btnAragaz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAragazActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton1.setText("Clear");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jCheckBox4.setText("Brandul Electrolux");
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(204, 204, 204));
        jButton2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton2.setText("Toate aragazele");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jCheckBox5.setText("Brandul Zanussi");
        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jCheckBox10.setText("Tip alimentare: gaz");

        jCheckBox11.setText("Tip alimentare: electric");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox3)
                                    .addComponent(jCheckBox5)
                                    .addComponent(jCheckBox4)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 524, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnAragaz, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox1)
                                    .addComponent(jCheckBox2))
                                .addGap(51, 51, 51)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox11)
                                    .addComponent(jCheckBox10))
                                .addGap(0, 446, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox5)
                    .addComponent(btnAragaz))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Aragaz", jPanel2);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jc1.setText("Timer");

        jc2.setText("Capacitate >= 70");
        jc2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jc2ActionPerformed(evt);
            }
        });

        jc3.setText("Capacitate <= 75");
        jc3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jc3ActionPerformed(evt);
            }
        });

        jc4.setText("Pret >= 1200");
        jc4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jc4ActionPerformed(evt);
            }
        });

        jButton11.setBackground(new java.awt.Color(204, 204, 204));
        jButton11.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton11.setText("Clear");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        btnAragaz6.setBackground(new java.awt.Color(204, 204, 204));
        btnAragaz6.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnAragaz6.setText("Filtrare");
        btnAragaz6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAragaz6ActionPerformed(evt);
            }
        });

        jButton12.setBackground(new java.awt.Color(204, 204, 204));
        jButton12.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton12.setText("Toate cuptoarele");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jTextArea5.setEditable(false);
        jTextArea5.setColumns(20);
        jTextArea5.setRows(5);
        jScrollPane6.setViewportView(jTextArea5);

        jc6.setText("Tip curatare: catalictica");
        jc6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jc6ActionPerformed(evt);
            }
        });

        jc5.setText("Pret <= 1600");

        jc7.setText("Tip curatare: pirolitica");
        jc7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jc7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane6))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jc4)
                                    .addComponent(jc3)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jc1)
                                            .addComponent(jc2))
                                        .addGap(78, 78, 78)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jc7)
                                            .addComponent(jc6))))
                                .addGap(0, 477, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton12))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jc5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAragaz6, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jc1)
                    .addComponent(jc6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jc2)
                    .addComponent(jc7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jc3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jc4)
                .addGap(8, 8, 8)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jc5)
                    .addComponent(btnAragaz6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton12))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 408, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Cuptor", jPanel3);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        clear_MasinaRufe.setBackground(new java.awt.Color(204, 204, 204));
        clear_MasinaRufe.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        clear_MasinaRufe.setText("Clear");
        clear_MasinaRufe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_MasinaRufeActionPerformed(evt);
            }
        });

        button_toate_MasinileDeSpalatRufe.setBackground(new java.awt.Color(204, 204, 204));
        button_toate_MasinileDeSpalatRufe.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        button_toate_MasinileDeSpalatRufe.setText("Toate masinile de spalat rufe");
        button_toate_MasinileDeSpalatRufe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_toate_MasinileDeSpalatRufeActionPerformed(evt);
            }
        });

        Text_MasinaDeSpalatRufe.setEditable(false);
        Text_MasinaDeSpalatRufe.setColumns(20);
        Text_MasinaDeSpalatRufe.setRows(5);
        jScrollPane2.setViewportView(Text_MasinaDeSpalatRufe);

        button_MasinaDeSpalatRufe.setBackground(new java.awt.Color(204, 204, 204));
        button_MasinaDeSpalatRufe.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        button_MasinaDeSpalatRufe.setText("Filtrare");
        button_MasinaDeSpalatRufe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_MasinaDeSpalatRufeActionPerformed(evt);
            }
        });

        jRadioButton1.setText("Brand BEKO");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setText("Brand ELECTROLUX");

        jRadioButton3.setText("Viteza de centrifugare <= 1200");

        jRadioButton4.setText("Viteza de centrifugare >= 1400");

        jRadioButton5.setText("Clasa eficienta spalare A");

        jRadioButton6.setText("Clasa eficienta spalare C");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jRadioButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jRadioButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jRadioButton2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jRadioButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jRadioButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jRadioButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(clear_MasinaRufe, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 429, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(button_toate_MasinileDeSpalatRufe)
                            .addComponent(button_MasinaDeSpalatRufe, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jRadioButton1)
                .addGap(6, 6, 6)
                .addComponent(jRadioButton2)
                .addGap(5, 5, 5)
                .addComponent(jRadioButton3)
                .addGap(7, 7, 7)
                .addComponent(jRadioButton4)
                .addGap(6, 6, 6)
                .addComponent(jRadioButton5)
                .addGap(5, 5, 5)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton6)
                    .addComponent(button_MasinaDeSpalatRufe))
                .addGap(5, 5, 5)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clear_MasinaRufe, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_toate_MasinileDeSpalatRufe))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Masina de spalat rufe", jPanel4);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        clear_MasinaVase.setBackground(new java.awt.Color(204, 204, 204));
        clear_MasinaVase.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        clear_MasinaVase.setText("Clear");
        clear_MasinaVase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_MasinaVaseActionPerformed(evt);
            }
        });

        button_MasinaDeSpalatVase.setBackground(new java.awt.Color(204, 204, 204));
        button_MasinaDeSpalatVase.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        button_MasinaDeSpalatVase.setText("Filtrare");
        button_MasinaDeSpalatVase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_MasinaDeSpalatVaseActionPerformed(evt);
            }
        });

        button_toate_MasinileDeSpalatVase.setBackground(new java.awt.Color(204, 204, 204));
        button_toate_MasinileDeSpalatVase.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        button_toate_MasinileDeSpalatVase.setText("Toate masinile de spalat vase");
        button_toate_MasinileDeSpalatVase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_toate_MasinileDeSpalatVaseActionPerformed(evt);
            }
        });

        Text_MasinaDeSpalatVase.setEditable(false);
        Text_MasinaDeSpalatVase.setColumns(20);
        Text_MasinaDeSpalatVase.setRows(5);
        jScrollPane5.setViewportView(Text_MasinaDeSpalatVase);

        jRadioButton7.setText("Clasa eficienta energetica E");

        jRadioButton8.setText("Clasa eficienta energetica F");
        jRadioButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton8ActionPerformed(evt);
            }
        });

        jRadioButton9.setText("Material cuva din inox");

        jRadioButton10.setText("Material cuva din otel inoxidabil");
        jRadioButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton10ActionPerformed(evt);
            }
        });

        jRadioButton11.setText("Pret > 2000 de lei");

        jRadioButton12.setText("Pret < 1700 de lei");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane5))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(clear_MasinaVase, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 534, Short.MAX_VALUE)
                                .addComponent(button_toate_MasinileDeSpalatVase))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRadioButton11)
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jRadioButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jRadioButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jRadioButton9)
                                    .addComponent(jRadioButton10))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jRadioButton12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(button_MasinaDeSpalatVase, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jRadioButton7)
                .addGap(6, 6, 6)
                .addComponent(jRadioButton8)
                .addGap(6, 6, 6)
                .addComponent(jRadioButton9)
                .addGap(7, 7, 7)
                .addComponent(jRadioButton10)
                .addGap(6, 6, 6)
                .addComponent(jRadioButton11)
                .addGap(5, 5, 5)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton12)
                    .addComponent(button_MasinaDeSpalatVase))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clear_MasinaVase, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_toate_MasinileDeSpalatVase))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Masina de spalat vase", jPanel5);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jButton7.setBackground(new java.awt.Color(204, 204, 204));
        jButton7.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton7.setText("Clear");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        button_frigider.setBackground(new java.awt.Color(204, 204, 204));
        button_frigider.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        button_frigider.setText("Filtrare");
        button_frigider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_frigiderActionPerformed(evt);
            }
        });

        button_toateFrigiderele.setBackground(new java.awt.Color(204, 204, 204));
        button_toateFrigiderele.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        button_toateFrigiderele.setText("Toate frigiderele");
        button_toateFrigiderele.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_toateFrigidereleActionPerformed(evt);
            }
        });

        jTextArea9.setEditable(false);
        jTextArea9.setColumns(20);
        jTextArea9.setRows(5);
        jScrollPane4.setViewportView(jTextArea9);

        jRadioButton13.setText("Sistem de racire \"NoFrost\"");

        jRadioButton14.setText("Sistem de racire \"Static\"");

        jRadioButton15.setText("Control temperatura analog");

        jRadioButton16.setText("Control temperatura digital");

        jRadioButton17.setText("Cu dozator de apa");

        jRadioButton18.setText("Fara dozator de apa");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(button_toateFrigiderele))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRadioButton17)
                                    .addComponent(jRadioButton15)
                                    .addComponent(jRadioButton13)
                                    .addComponent(jRadioButton16)
                                    .addComponent(jRadioButton14))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jRadioButton18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 564, Short.MAX_VALUE)
                                .addComponent(button_frigider, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jRadioButton13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton14)
                .addGap(6, 6, 6)
                .addComponent(jRadioButton15)
                .addGap(6, 6, 6)
                .addComponent(jRadioButton16)
                .addGap(6, 6, 6)
                .addComponent(jRadioButton17)
                .addGap(5, 5, 5)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton18)
                    .addComponent(button_frigider))
                .addGap(7, 7, 7)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_toateFrigiderele))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Frigider", jPanel6);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jButton6.setBackground(new java.awt.Color(204, 204, 204));
        jButton6.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton6.setText("Clear");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        button_Congelator.setBackground(new java.awt.Color(204, 204, 204));
        button_Congelator.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        button_Congelator.setText("Filtrare");
        button_Congelator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_CongelatorActionPerformed(evt);
            }
        });

        button_toateCongelatoarele.setBackground(new java.awt.Color(204, 204, 204));
        button_toateCongelatoarele.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        button_toateCongelatoarele.setText("Toate congelatoarele");
        button_toateCongelatoarele.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_toateCongelatoareleActionPerformed(evt);
            }
        });

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane3.setViewportView(jTextArea2);

        jRadioButton19.setText("Sistem de racire \"NoFrost\"");

        jRadioButton20.setText("Sistem de racire \"Static\"");

        jRadioButton21.setText("Control temperatura analog");
        jRadioButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton21ActionPerformed(evt);
            }
        });

        jRadioButton22.setText("Control temperatura digital");

        jRadioButton23.setText("Cutie fructe si legume");

        jRadioButton24.setText("Fara cutie fructe si legume");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton24)
                            .addComponent(jRadioButton23)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRadioButton22)
                            .addComponent(jRadioButton21)
                            .addComponent(jRadioButton20)
                            .addComponent(jRadioButton19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 493, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(button_Congelator, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button_toateCongelatoarele, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jRadioButton19)
                .addGap(6, 6, 6)
                .addComponent(jRadioButton20)
                .addGap(6, 6, 6)
                .addComponent(jRadioButton21)
                .addGap(6, 6, 6)
                .addComponent(jRadioButton22)
                .addGap(6, 6, 6)
                .addComponent(jRadioButton23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton24)
                    .addComponent(button_Congelator))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_toateCongelatoarele))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Congelator", jPanel1);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---", "Aragaz", "Cuptor", "Masina de spalat rufe", "Masina de spalat vase", "Frigider", "Congelator" }));
        jComboBox1.setFocusable(false);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel7.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 170, 30));

        jLabel7.setText("Selectati o clasa:");
        jPanel7.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, 30));
        jPanel7.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, 25));

        jButtonCitire.setBackground(new java.awt.Color(204, 204, 204));
        jButtonCitire.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButtonCitire.setText("Citire");
        jButtonCitire.setFocusable(false);
        jButtonCitire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCitireActionPerformed(evt);
            }
        });
        jPanel7.add(jButtonCitire, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 20, 120, 30));

        jButtonScriere.setBackground(new java.awt.Color(204, 204, 204));
        jButtonScriere.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButtonScriere.setText("Scriere");
        jButtonScriere.setFocusable(false);
        jButtonScriere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonScriereActionPerformed(evt);
            }
        });
        jPanel7.add(jButtonScriere, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 20, 120, 30));
        jPanel7.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, 25));
        jPanel7.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, 25));
        jPanel7.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, 25));
        jPanel7.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, 25));
        jPanel7.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, -1, 25));
        jPanel7.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, -1, 25));
        jPanel7.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, -1, 25));
        jPanel7.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, -1, 25));
        jPanel7.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 60, -1, 25));
        jPanel7.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 90, -1, 25));
        jPanel7.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 120, -1, 25));
        jPanel7.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 150, -1, 25));
        jPanel7.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 180, -1, 25));
        jPanel7.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 210, -1, 25));
        jPanel7.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 240, -1, 25));
        jPanel7.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 270, -1, 25));
        jPanel7.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 300, -1, 25));
        jPanel7.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 60, -1, 25));
        jPanel7.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 90, -1, 25));
        jPanel7.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 120, -1, 25));
        jPanel7.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 150, -1, 25));
        jPanel7.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 180, -1, 25));
        jPanel7.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 210, -1, 25));
        jPanel7.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 240, -1, 25));
        jPanel7.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 270, -1, 25));
        jPanel7.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 300, -1, 25));

        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });
        jPanel7.add(jTextField7, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, 80, 25));
        jPanel7.add(jTextField8, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 90, 80, 25));
        jPanel7.add(jTextField9, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 120, 80, 25));
        jPanel7.add(jTextField10, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 150, 80, 25));
        jPanel7.add(jTextField11, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 180, 80, 25));
        jPanel7.add(jTextField12, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 210, 80, 25));
        jPanel7.add(jTextField13, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 240, 80, 25));
        jPanel7.add(jTextField14, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 270, 80, 25));
        jPanel7.add(jTextField15, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 300, 80, 25));
        jPanel7.add(jTextField16, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 60, 80, 25));
        jPanel7.add(jTextField17, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 90, 80, 25));

        jTextAreaFisiere.setEditable(false);
        jTextAreaFisiere.setColumns(20);
        jTextAreaFisiere.setRows(5);
        jTextAreaFisiere.setFocusable(false);
        jScrollPane7.setViewportView(jTextAreaFisiere);

        jPanel7.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 830, 250));
        jPanel7.add(jTextField18, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 120, 80, 25));
        jPanel7.add(jTextField19, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 150, 80, 25));
        jPanel7.add(jTextField20, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 180, 80, 25));
        jPanel7.add(jTextField21, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 210, 80, 25));
        jPanel7.add(jTextField22, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 240, 80, 25));
        jPanel7.add(jTextField23, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 270, 80, 25));
        jPanel7.add(jTextField24, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 300, 80, 25));
        jPanel7.add(jTextField25, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 60, 80, 25));
        jPanel7.add(jTextField26, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 90, 80, 25));
        jPanel7.add(jTextField27, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 120, 80, 25));
        jPanel7.add(jTextField28, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 150, 80, 25));
        jPanel7.add(jTextField29, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 180, 80, 25));
        jPanel7.add(jTextField30, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 210, 80, 25));
        jPanel7.add(jTextField31, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 240, 80, 25));
        jPanel7.add(jTextField32, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 270, 80, 25));
        jPanel7.add(jTextField33, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 300, 80, 25));

        jTabbedPane1.addTab("Fisiere", jPanel7);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 636, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAragazActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAragazActionPerformed
        // TODO add your handling code here:
        jTextArea1.setText(null);
        Aragaz a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15;
        a1 = new Aragaz("Aragaz", "GORENJE ", "GG5A11SJ", 4, "gaz", "gaz", "gaz", "fara autocuratare", false, false, "Ghidaje ambutisate, Usa Ultra Rece", 70, "A", 1.080f, 0.0f, 1.249f, 36.2f, "50 x 59.4 x 85", "gri", 4.74f, 19, 12, 24);
        a2 = new Aragaz("Aragaz", "BEKO", "FSM62530DXMS", 4, "mixta (Gaz + Electric)", "gaz", "electric", "catalitica", false, true, "High efficiency gas burner, Gratar din fonta, 3D Cooking, Gatire asistata cu ventilatie", 72, "A", 2.415f, 220f, 1.599f, 56.4f, "60 x 60 x 85", "negru-inox", 4.59f, 66, 12, 24);
        a3 = new Aragaz("Aragaz", "ELECTROLUX", "LKR564201K", 7, "electric", "vitroceramica", "electric", "catalitica", false, true, "SteamBake, AirFry", 58, "A", 8605.5f, 230, 1.399f, 44f, "50 x 60 x 85.8", "negru", 4.25f, 4, 12, 24);
        a4 = new Aragaz("Aragaz", "ZANUSSI", "ZCK57201BA", 4, "mixta (Gaz + Electric)", "gaz", "electric", "fara autocuratare", false, true, "Variatie temperatura: 50 C - 250 C", 54, "A", 2045.6f, 230f, 1.599f, 41f, "50 x 60 x 85.5", "negru", 5, 5, 12, 24);
        a5 = new Aragaz("Aragaz", "ZANUSSI", "ZCG612K1BA", 6, "gaz", "gaz", "gaz", "catalitica", true, true, "Temperatura variabila: 50 - 250 C", 59, "A", 0.0f, 230f, 1.699f, 41f, "60 x 60 x 85.7", "negru", 5f, 7, 12, 24);
        a6 = new Aragaz("Aragaz", "VORTEX", "VAG9060SS01V", 5, "mixta (Gaz + Electric)", "gaz", "electric", "fara autocuratare", false, true, "Plita: Aprindere electrica; Cuptor: Usa detasabila, Temporizator mecanic, Iluminare cuptor; Alte functii: Picioare ajustabile", 105, "A", 0.0f, 220f, 2.499f, 67, "90 x 60 x 85", "inox", 5, 2, 12, 24);
        a7 = new Aragaz("Aragaz", "HANSA", "FCIWS59363", 4, "electric", "inductie", "electric", "abur", false, true, "Indicator caldura reziduala, Child lock, Fierbere automata, Mentinere caldura, Detectare obiecte mici, Detectare supraincalzire, Detectare scurgere, Limitare temperatura, Sertar pe ghidaje cu role", 65, "A", 10.500f, 315f, 2.389f, 39f, "50 x 60 x 85", "alb", 4.5f, 2, 12, 24);
        a8 = new Aragaz("Aragaz", "ELECTROLUX", "LKM520000X", 4, "mixta (Gaz + Electric)", "gaz", "electric", "fara autocuratare", false, true, "Temperatura reglabila 50 - 250 C", 54, "A", 3345.6f, 230f, 1.899f, 41.2f, "50 x 60 x 87.7", "inox", 4.36f, 28, 12, 24);
        a9 = new Aragaz("Aragaz", "ELECTROLUX", "LKG604003X", 7, "gaz", "gaz", "gaz", "catalitica", true, true, "Temperatura variabila: 50 C - 250 C", 59, "A", 0.0f, 230, 2.049f, 43f, "60 x 60 x 85.7", "inox", 5, 4, 12, 24);
        a10 = new Aragaz("Aragaz", "GORENJE", "GEC6C61BMB", 4, "electric", "vitroceramica", "electric", "AquaClean", false, true, "ExtraSteam, Afisaj IconLed", 71, "A", 10200f, 220f, 2.799f, 49.5f, "60 x 60 x 85", "negru", 4.88f, 4, 12, 24);
        a11 = new Aragaz("Aragaz", "BEKO  ", "FSGT52110DXO", 4, "gaz", "gaz", "gaz", "Fara autocuratare", true, false, "High-Efficiency Gas Burner, Siguranta flacara la cuptor, Iluminare cuptor", 55, "A", 0.0f, 230f, 1.299f, 45f, "50 x 60 x 85", "inox", 4.35f, 26, 12, 24);
        a12 = new Aragaz("Aragaz", "ZANUSSI", "ZCG510F1WA", 4, "gaz", "gaz", "gaz", "Fara autocuratare", false, false, "Orificiu evacuare vapori din cuptor; Temperatura variabila: 50 C - 250 C", 59, "A", 0.0f, 230f, 1.252f, 41f, "50 x 60 x 85", "alb", 4.59f, 17, 12, 24);
        a13 = new Aragaz("Aragaz", "GORENJE", "GEC5A12WG-B", 5, "electric", "vitroceramica", "electric", "AquaClean", false, false, "Interior SilverMatte, Forma HomeMade, Spatiu depozitare", 68, "A", 8000f, 220f, 1.638f, 35.6f, "50 x 59.4 x 85", "alb", 4.88f, 5, 12, 24);
        a14 = new Aragaz("Aragaz", "BEKO", "FSMT52320DXO", 4, "mixta (Gaz + Electric)", "gaz", "electric", "Fara autocuratare", true, true, "8 functii de gatire", 55, "A", 2100f, 220f, 1.629f, 48.9f, "50 x 60 x 85", "inox", 4.74f, 50, 12, 24);
        a15 = new Aragaz("Aragaz", "BEKO", "FSM52330DAO", 4, "mixta (Gaz + Electric)", "gaz", "electric", "Fara autocuratare", false, true, "High efficiency gas burner, 3D Cooking, Cuptor multifunctional, Siguranta flacara la plita aragaz, Timer", 60, "A", 2100f, 220f, 1.677f, 48f, "50 x 60 x 85", "antracit", 4.67f, 24, 12, 24);
        Aragaz[] vectAragaze = {a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15};

        int numarAparitii = 1;
        for (Aragaz vectAragaze1 : vectAragaze) {
            if (verificaConditiiFiltrare(vectAragaze1)) {
                jTextArea1.append("\n\n" + numarAparitii + "." + vectAragaze1);
                numarAparitii++;
            }
        }
        if (!jCheckBox1.isSelected() && !jCheckBox2.isSelected() && !jCheckBox3.isSelected() && !jCheckBox4.isSelected()) {
            JOptionPane.showMessageDialog(null, "Nu ați ales modalitatea de filtrare", "Eroare", JOptionPane.WARNING_MESSAGE);
            jTextArea1.setText(null);

        }
        if (jTextArea1.getText().trim().length() == 0 && (jCheckBox1.isSelected() || jCheckBox2.isSelected() || jCheckBox3.isSelected() || jCheckBox4.isSelected() || jCheckBox5.isSelected() || jCheckBox10.isSelected() || jCheckBox11.isSelected())) {
            JOptionPane.showMessageDialog(null, "Nu exista produse", "Eroare", JOptionPane.NO_OPTION);
        }
    }//GEN-LAST:event_btnAragazActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jTextArea1.setText(null);
        jCheckBox1.setSelected(false);
        jCheckBox2.setSelected(false);
        jCheckBox3.setSelected(false);
        jCheckBox4.setSelected(false);
        jCheckBox5.setSelected(false);
        jCheckBox10.setSelected(false);
        jCheckBox11.setSelected(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Aragaz a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15;

        a1 = new Aragaz("Aragaz", "GORENJE ", "GG5A11SJ", 4, "gaz", "gaz", "gaz", "fara autocuratare", false, false, "Ghidaje ambutisate, Usa Ultra Rece", 70, "A", 1.080f, 0.0f, 1.249f, 36.2f, "50 x 59.4 x 85", "gri", 4.74f, 19, 12, 24);
        a2 = new Aragaz("Aragaz", "BEKO", "FSM62530DXMS", 4, "mixta (Gaz + Electric)", "gaz", "electric", "catalitica", false, true, "High efficiency gas burner, Gratar din fonta, 3D Cooking, Gatire asistata cu ventilatie", 72, "A", 2.415f, 220f, 1.599f, 56.4f, "60 x 60 x 85", "negru-inox", 4.59f, 66, 12, 24);
        a3 = new Aragaz("Aragaz", "ELECTROLUX", "LKR564201K", 7, "electric", "vitroceramica", "electric", "catalitica", false, true, "SteamBake, AirFry", 58, "A", 8605.5f, 230, 1.399f, 44f, "50 x 60 x 85.8", "negru", 4.25f, 4, 12, 24);
        a4 = new Aragaz("Aragaz", "ZANUSSI", "ZCK57201BA", 4, "mixta (Gaz + Electric)", "gaz", "electric", "fara autocuratare", false, true, "Variatie temperatura: 50 C - 250 C", 54, "A", 2045.6f, 230f, 1.599f, 41f, "50 x 60 x 85.5", "negru", 5, 5, 12, 24);
        a5 = new Aragaz("Aragaz", "ZANUSSI", "ZCG612K1BA", 6, "gaz", "gaz", "gaz", "catalitica", true, true, "Temperatura variabila: 50 - 250 C", 59, "A", 0.0f, 230f, 1.699f, 41f, "60 x 60 x 85.7", "negru", 5f, 7, 12, 24);
        a6 = new Aragaz("Aragaz", "VORTEX", "VAG9060SS01V", 5, "mixta (Gaz + Electric)", "gaz", "electric", "fara autocuratare", false, true, "Plita: Aprindere electrica; Cuptor: Usa detasabila, Temporizator mecanic, Iluminare cuptor; Alte functii: Picioare ajustabile", 105, "A", 0.0f, 220f, 2.499f, 67, "90 x 60 x 85", "inox", 5, 2, 12, 24);
        a7 = new Aragaz("Aragaz", "HANSA", "FCIWS59363", 4, "electric", "inductie", "electric", "abur", false, true, "Indicator caldura reziduala, Child lock, Fierbere automata, Mentinere caldura, Detectare obiecte mici, Detectare supraincalzire, Detectare scurgere, Limitare temperatura, Sertar pe ghidaje cu role", 65, "A", 10.500f, 315f, 2.389f, 39f, "50 x 60 x 85", "alb", 4.5f, 2, 12, 24);
        a8 = new Aragaz("Aragaz", "ELECTROLUX", "LKM520000X", 4, "mixta (Gaz + Electric)", "gaz", "electric", "fara autocuratare", false, true, "Temperatura reglabila 50 - 250 C", 54, "A", 3345.6f, 230f, 1.899f, 41.2f, "50 x 60 x 87.7", "inox", 4.36f, 28, 12, 24);
        a9 = new Aragaz("Aragaz", "ELECTROLUX", "LKG604003X", 7, "gaz", "gaz", "gaz", "catalitica", true, true, "Temperatura variabila: 50 C - 250 C", 59, "A", 0.0f, 230, 2.049f, 43f, "60 x 60 x 85.7", "inox", 5, 4, 12, 24);
        a10 = new Aragaz("Aragaz", "GORENJE", "GEC6C61BMB", 4, "electric", "vitroceramica", "electric", "AquaClean", false, true, "ExtraSteam, Afisaj IconLed", 71, "A", 10200f, 220f, 2.799f, 49.5f, "60 x 60 x 85", "negru", 4.88f, 4, 12, 24);
        a11 = new Aragaz("Aragaz", "BEKO  ", "FSGT52110DXO", 4, "gaz", "gaz", "gaz", "Fara autocuratare", true, false, "High-Efficiency Gas Burner, Siguranta flacara la cuptor, Iluminare cuptor", 55, "A", 0.0f, 230f, 1.299f, 45f, "50 x 60 x 85", "inox", 4.35f, 26, 12, 24);
        a12 = new Aragaz("Aragaz", "ZANUSSI", "ZCG510F1WA", 4, "gaz", "gaz", "gaz", "Fara autocuratare", false, false, "Orificiu evacuare vapori din cuptor; Temperatura variabila: 50 C - 250 C", 59, "A", 0.0f, 230f, 1.252f, 41f, "50 x 60 x 85", "alb", 4.59f, 17, 12, 24);
        a13 = new Aragaz("Aragaz", "GORENJE", "GEC5A12WG-B", 5, "electric", "vitroceramica", "electric", "AquaClean", false, false, "Interior SilverMatte, Forma HomeMade, Spatiu depozitare", 68, "A", 8000f, 220f, 1.638f, 35.6f, "50 x 59.4 x 85", "alb", 4.88f, 5, 12, 24);
        a14 = new Aragaz("Aragaz", "BEKO", "FSMT52320DXO", 4, "mixta (Gaz + Electric)", "gaz", "electric", "Fara autocuratare", true, true, "8 functii de gatire", 55, "A", 2100f, 220f, 1.629f, 48.9f, "50 x 60 x 85", "inox", 4.74f, 50, 12, 24);
        a15 = new Aragaz("Aragaz", "BEKO", "FSM52330DAO", 4, "mixta (Gaz + Electric)", "gaz", "electric", "Fara autocuratare", false, true, "High efficiency gas burner, 3D Cooking, Cuptor multifunctional, Siguranta flacara la plita aragaz, Timer", 60, "A", 2100f, 220f, 1.677f, 48f, "50 x 60 x 85", "antracit", 4.67f, 24, 12, 24);
        Aragaz[] vectAragaze = {a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15};
        int numarAparitii = 1;
        for (Aragaz vectAragaze1 : vectAragaze) {

            jTextArea1.append("\n\n" + numarAparitii + "." + vectAragaze1);
            numarAparitii++;

            jCheckBox1.setSelected(false);
            jCheckBox2.setSelected(false);
            jCheckBox3.setSelected(false);
            jCheckBox4.setSelected(false);
            jCheckBox5.setSelected(false);
            jCheckBox10.setSelected(false);
            jCheckBox11.setSelected(false);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox5.isSelected() && jCheckBox4.isSelected()) {
            jCheckBox4.setSelected(false);
        }
    }//GEN-LAST:event_jCheckBox5ActionPerformed

    private void clear_MasinaVaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_MasinaVaseActionPerformed
        // TODO add your handling code here:
        Text_MasinaDeSpalatVase.setText(null);
        jRadioButton7.setSelected(false);
        jRadioButton8.setSelected(false);
        jRadioButton9.setSelected(false);
        jRadioButton10.setSelected(false);
        jRadioButton11.setSelected(false);
        jRadioButton12.setSelected(false);
    }//GEN-LAST:event_clear_MasinaVaseActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        jTextArea2.setText(null);
        jRadioButton19.setSelected(false);
        jRadioButton20.setSelected(false);
        jRadioButton21.setSelected(false);
        jRadioButton22.setSelected(false);
        jRadioButton23.setSelected(false);
        jRadioButton24.setSelected(false);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        jTextArea9.setText(null);
        jRadioButton13.setSelected(false);
        jRadioButton14.setSelected(false);
        jRadioButton15.setSelected(false);
        jRadioButton16.setSelected(false);
        jRadioButton17.setSelected(false);
        jRadioButton18.setSelected(false);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void button_MasinaDeSpalatVaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_MasinaDeSpalatVaseActionPerformed
        MasinaDeSpalatVase v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15;

        v1 = new MasinaDeSpalatVase("Masina de spalat vase independenta", "GORENJE", "GS520E15S", "Semnal optic si acustic la sfarsitul programului, Sistem de diagnosticare a defectiunilor", 9, 5, "E", 1754.90f, 36.5f, "44.8 x 60 x 84.5", "Inox", "LED / Electronic", 2, "Electronic", "Inox", "Program rapid, Pre-clatire/Inmuiere, Intensiv, Program ECO, Program 1h", 'A', 'A', "3:55", 70, 9, 'C', 1760, 4.33f, 3, 12, 24);
        v2 = new MasinaDeSpalatVase("Masina de spalat vase semi-incorporabila", "ELECTROLUX", "EEM43300IX", "Brat pulverizator FlexiSpray Satellite, Extra igienizare, GlassCare, XtraPower, sistem de uscare AirDry", 10, 8, "D", 2499.90f, 34.8f, "45 x 55 x 81.8", "Inox", "LED / Butoane", 2, "Electronic", "Inox", "160 min, 60 min, 90 min, AUTO Sense, Eco, Machine Care, Quick 30 min, Clatire & Pauza", 'D', 'A', "4:00", 67, 9.9f, 'B', 1950, 4.5f, 2, 12, 24);
        v3 = new MasinaDeSpalatVase("Masina de spalat vase independenta", "BEKO", "DVN06430X", "Flexible HalfLoad , All in 1, Deschidere automata usa, Sistem control exces apa, Senzor murdarire, Indicator sare, Indicator clatire suplimentara", 14, 6, "D", 1839.90f, 43.2f, "59.8 x 60 x 85", "Inox", "LED / Mecanic", 3, "Mecanic", "Otel inoxidabil", "Quick&Shine , Eco 50 C, Auto Program, Intensive 70 C, Mini 30', Delicate 40'", 'D', 'A', "3:20", 85, 11.5f, 'C', 1900, 4.89f, 35, 12, 24);
        v4 = new MasinaDeSpalatVase("Masina de spalat vase independenta", "BOSCH", "SKS51E32EU", "ExtraDry, EcoSilence Drive, Detergent Automation, Senzor de incarcare, Sistem de protectie a paharelor, 5 nivele de temperatura, Circuit electronic de regenerare a sarii de dedurizare, Pompa de incalzire", 6, 5, "F", 1549.90f, 20.95f, "55.1 x 50 x 45", "Alb", "LED / Mecanic", 1, "Mecanic", "Inox", "Intensiv 70, Normal 65, Eco 50, Glass 40, Spalare rapida 45", 'F', 'B', "03:55", 61, 8, 'C', 2400, 4.38f, 8, 12, 24);
        v5 = new MasinaDeSpalatVase("Masina de spalat vase independenta", "INDESIT", "DSFE1B10", "Incarcare la jumatate", 10, 6, "F", 1599.90f, 34.9f, "45 x 59 x 85", "Alb", "Buton central", 2, "Electronic", "Otel inoxidabil", "Eco, Intensiv, Normal, Rapid 40 min, Incarcare pe jumatate, Inmuiere", 'F', 'A', "04:00", 84, 11.5f, 'D', 1900, 5, 3, 12, 24);
        v6 = new MasinaDeSpalatVase("Masina de spalat vase incorporabila", "ELECTROLUX", "EEM48221L", "Time Beam, Brat pulverizator FlexiSpray Satellite, Extra igienizare, GlassCare, XtraPower, sistem de uscare AirDry", 14, 8, "E", 2750.90f, 38.4f, "59.6 x 55 x 81.8", "Alb", "LED / Butoane", 2, "Electronic", "Inox", "160 min, 60 min, 90 min, AUTO Sense, Eco, Machine Care, Quick 30 min, Clatire & Pauza", 'E', 'A', "04:00", 95, 10.5f, 'B', 1950, 5, 3, 24, 24);
        v7 = new MasinaDeSpalatVase("Masina de spalat vase incorporabila", "WHIRLPOOL", "WSBO3O34PFX", "Tehnologia al-6-lea Simt, PowerClean, Pornire Programata, Sistem Natural Dry", 10, 8, "D", 2049.90f, 29.6f, "44.8 x 55.5 x 82", "Inox", "Digital", 3, "Electronic", "Otel inoxidabil", "Eco, 6th Sense, Intensiv, Zilnic, Cristal, Rapid 30 min, Prespalare, Autocuratare", 'D', 'A', "03:40", 67, 9, 'B', 1900, 4.86f, 7, 12, 24);
        v8 = new MasinaDeSpalatVase("Masina de spalat vase independenta", "GORENJE", "GS541D10X", "TotalDry, Motor Inverder PowerDrive", 9, 5, "D", 1079.51f, 38.2f, "44.8 x 60 x 84.5", "Argintiu", "LED / Electronic", 3, "Electronic", "Otel inoxidabil", "Program automat, Intensiv, Program Eco, Program pentru sticle", 'B', 'A', "03:25", 72, 9.5f, 'C', 1760, 4.92f, 13, 12, 24);
        v9 = new MasinaDeSpalatVase("Masina de spalat vase incorporabila", "BOSCH", "SPV4EMX60E", "Conectivitate Wi-Fi / aplicatie Home Connect, DosageAssist, Sistem AquaStop, Semnal sonor la terminarea programului, Afisare timp ramas, InfoLight", 10, 6, "F", 2999.90f, 29.9f, "44.8 x 55 x 81.5", "Inox", "LED / Taste", 3, "Electronic", "Inox", "Eco 50 C, Auto 45-65 C, Intensive 70 C, Program 1h 65 C, Silence 50 C, Program favorit", 'A', 'A', "04:16", 67, 6.7f, 'C', 2400, 4.69f, 16, 12, 24);
        v10 = new MasinaDeSpalatVase("Masina de spalat vase independenta", "GORENJE", "GS62040S", "Total AquaStop", 12, 5, "E", 1610.90f, 43, "60 x 60 x 84.5", "Argintiu", "LED / Mecanic", 2, "Mecanic", "Otel inoxidabil", "Program rapid, Intensiv, Program Eco, Inmuiere, Spalare zilnica", 'C', 'A', "03:57", 93, 11, 'C', 1850, 3, 4, 12, 24);
        v11 = new MasinaDeSpalatVase("Masina de spalat vase independenta", "HOTPOINT", "HSFO 3T235 WC X", "3D Zone Wash, ActivEco, FlexiLoad, Programe automate, Clatire igienizanta, Pornire programata", 10, 9, "D", 2369.90f, 39.5f, "45 x 59 x 85", "Inox", "Digital", 2, "Electronic", "Otel inoxidabil", "Eco, Auto intensiv, Auto normal, Zilnic, Expres 30, Good night, Igienizare, Inmuiere, Autocuratare", 'D', 'A', "03:40", 67, 9, 'C', 1900, 5, 5, 12, 24);
        v12 = new MasinaDeSpalatVase("Masina de spalat vase independenta", "CANDY", "CDCP 8", "Indicator sonor finalizare ciclu, Indicator sare si agent clatire", 8, 6, "F", 1259.91f, 27, "55 x 50 x 60", "Alb", "Digital", 2, "Mecanic", "Inox", "Eco, Intensiv 65 C, Rapid 35', Zlnic, Sticla", 'F', 'A', "03:40", 72, 8, 'D', 1900, 4.2f, 5, 12, 24);
        v13 = new MasinaDeSpalatVase("Masina de spalat vase independenta", "SHARP", "QW-NA1CF47ES-EU", "Sistem de uscare activ, EcoWash", 13, 4, "E", 1255.92f, 46, "59.8 x 59.8 x 85", "Argintiu", "Afisaj grafic", 2, "Electronic", "Inox", "Eco 50 C, Intensive 65 C, Express 50', Quick 30'", 'E', 'A', "03:25", 94, 12, 'C', 1850, 4.67f, 3, 12, 24);
        v14 = new MasinaDeSpalatVase("Masina de spalat vase incorporabila", "BOSCH", "SMV46KX55E", "ExtraDry, Silence, Setare VarioFlex, EcoSilence Drive, DosageAssist, Aqua Sensor, Load Sensor, Sistem de protectie a paharelor, Circuit electronic de regenerare a sarii de dedurizare, Sistem de spalare cu schimbator de caldura (Heat exchanger), Pompa de incalzire, Tehnica de spalare cu alternare", 13, 6, "E", 2499.90f, 36.8f, "59.8 x 55 x 81.5", "Inox", "LED / Electronic", 2, "Electronic", "Inox/Polinox", "Intensiv 70  C, Auto 45-65  C, Eco 50  C, Silence 50  C, Pahare 40  C, Program 1h 65  C", 'E', 'A', "03:30", 94, 9.5f, 'B', 2400, 4.55f, 11, 12, 24);
        v15 = new MasinaDeSpalatVase("Masina de spalat vase independenta", "ARCTIC", "DBI542", "Aqua protect, Sistem dedurizare apa, Pornire intarziata, Sistem de uscare static, Indicator LED status program, Indicator nivel sare si substanta clatire, Incarcare la jumatate, Optimizare ciclu de spalare pentru tableta de detergent", 14, 5, "E", 1648.99f, 34.4f, "59.8 x 55 x 81.8", "Alb", "LED Touch Control", 3, "Electronic", "Otel inoxidabil", "Eco 50, Express 30', Intensiv 70 C, Extra 58', Curatare / Uscare", 'E', 'A', "03:25", 95, 12.9f, 'C', 1850, 4.62f, 13, 12, 24);

        MasinaDeSpalatVase[] vectMasinaDeSpalatVase = {v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15};

        int numarAparitii = 1;
        for (MasinaDeSpalatVase vectMasinaDeSpalatVase1 : vectMasinaDeSpalatVase) {
            boolean b = true;

            if (jRadioButton7.isSelected() && !vectMasinaDeSpalatVase1.getClasaEficientaEnergetica().equals("E") && !(jRadioButton8.isSelected() && vectMasinaDeSpalatVase1.getClasaEficientaEnergetica().equals("F"))) {
                b = false;
            }
            if (jRadioButton8.isSelected() && !vectMasinaDeSpalatVase1.getClasaEficientaEnergetica().equals("F") && !(jRadioButton7.isSelected() && vectMasinaDeSpalatVase1.getClasaEficientaEnergetica().equals("E"))) {
                b = false;
            }
            if (jRadioButton9.isSelected() && !vectMasinaDeSpalatVase1.getMaterialCuva().equals("Inox") && !(jRadioButton10.isSelected() && vectMasinaDeSpalatVase1.getMaterialCuva().equals("Otel inoxidabil"))) {
                b = false;
            }
            if (jRadioButton10.isSelected() && !vectMasinaDeSpalatVase1.getMaterialCuva().equals("Otel inoxidabil") && !(jRadioButton9.isSelected() && vectMasinaDeSpalatVase1.getMaterialCuva().equals("Inox"))) {
                b = false;
            }
            if (jRadioButton11.isSelected() && !(vectMasinaDeSpalatVase1.getPret() > 2000f) && !(jRadioButton12.isSelected() && vectMasinaDeSpalatVase1.getPret() < 1700f)) {
                b = false;
            }

            if (jRadioButton12.isSelected() && !(vectMasinaDeSpalatVase1.getPret() < 1700f) && !(jRadioButton11.isSelected() && vectMasinaDeSpalatVase1.getPret() > 2000f)) {
                b = false;
            }
            if (b == true) {
                Text_MasinaDeSpalatVase.append("\n" + numarAparitii + "." + vectMasinaDeSpalatVase1);
                numarAparitii++;
            }
        }
        if (!jRadioButton7.isSelected() && !jRadioButton8.isSelected() && !jRadioButton9.isSelected() && !jRadioButton10.isSelected() && !jRadioButton11.isSelected() && !jRadioButton12.isSelected()) {
            JOptionPane.showMessageDialog(null, "Nu ați ales modalitatea de filtrare", "Eroare", JOptionPane.WARNING_MESSAGE);
            Text_MasinaDeSpalatVase.setText(null);
        }
    }//GEN-LAST:event_button_MasinaDeSpalatVaseActionPerformed

    private void button_frigiderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_frigiderActionPerformed
        // TODO add your handling code here:
        Frigider f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15;

        f1 = new Frigider(true, "NoFrost", 1, "Digital", 5, true, false, 40, "Samsung", "Frigider cu o singura usa", "A++", "EliteCool Pro X200", "Alb", "Dispenser apa - Da; Material rafturi - Plastic; Iluminare interior - Da, neon; Picioare - Da, ajustabile spate; Lungime cablu - 1.8m", 200.0f, 50, 1500.0f, 4.5f, "60x80x150", 80.0f, 24, 12);
        f2 = new Frigider(true, "Static", 2, "Digital", 4, false, false, 45, "LG", "Frigider cu doua usi", "A+", "FreshFrost Ultra 3000", "Negru", "Functie dezghetare rapida - Da; Material rafturi - Metal; Iluminare interior - Da, LED; Picioare - Da, ajustabile fata; Lungime cablu - 1.6m", 250.0f, 30, 1200.0f, 4.0f, "70x90x160", 90.0f, 18, 10);
        f3 = new Frigider(true, "NoFrost", 2, "Digital", 3, true, true, 50, "Whirlpool", "Frigider cu doua usi", "A", "ArcticBreeze Elite Z", "Argintiu", "Sistem anti-amprenta - Da; Material rafturi - Sticla securizata; Iluminare interior - Da, halogen; Picioare - Da, ajustabile spate; Lungime cablu - 1.9m", 180.0f, 40, 1300.0f, 4.2f, "50x70x130", 70.0f, 12, 6);
        f4 = new Frigider(true, "Static", 1, "Analog", 4, false, false, 42, "Bosch", "Frigider cu o singura usa", "A++", "CoolMaster Inox 500", "Alb", "Sertar legume/fructe - Da; Material rafturi - Plastic; Iluminare interior - Da, LED; Picioare - Da, ajustabile fata; Lungime cablu - 1.7m", 220.0f, 60, 1700.0f, 4.8f, "65x85x140", 85.0f, 36, 24);
        f5 = new Frigider(false, "NoFrost", 2, "Digital", 5, true, true, 48, "Haier", "Frigider side-by-side", "A+", "IceTech Luxor 8000", "Rosu", "Functie economisire energie - Da; Material rafturi - Sticla securizata; Iluminare interior - Da, LED; Picioare - Da, ajustabile spate; Lungime cablu - 1.5m", 240.0f, 45, 1400.0f, 4.5f, "75x95x170", 95.0f, 30, 18);
        f6 = new Frigider(false, "Static", 3, "Analog", 3, false, false, 55, "Electrolux", "Frigider cu doua usi", "A", "ChillWave Platinum Plus", "Negru", "Sistem de filtrare aer - Da; Material rafturi - Metal; Iluminare interior - Da, neon; Picioare - Da, ajustabile fata; Lungime cablu - 1.8m", 200.0f, 55, 1600.0f, 4.0f, "55x75x120", 75.0f, 24, 12);
        f7 = new Frigider(true, "NoFrost", 2, "Digital", 4, true, true, 38, "Beko", "Frigider cu doua usi", "A++", "FrostGuardian Supreme 700", "Alb", "Dozator apa si gheata - Da; Material rafturi - Plastic; Iluminare interior - Da, halogen; Picioare - Da, ajustabile spate; Lungime cablu - 1.7m", 180.0f, 35, 1200.0f, 4.2f, "60x80x150", 80.0f, 18, 10);
        f8 = new Frigider(true, "Static", 2, "Analog", 5, false, false, 43, "Hotpoint", "Frigider cu doua usi", "A+", "CrystalChill Diamond 900", "Argintiu", "Functie vacanta - Da; Material rafturi - Sticla; Iluminare interior - Da, LED; Picioare - Da, ajustabile fata; Lungime cablu - 1.6m", 220.0f, 50, 1400.0f, 4.8f, "70x90x160", 90.0f, 30, 24);
        f9 = new Frigider(true, "NoFrost", 3, "Digital", 3, true, true, 52, "Siemens", "Frigider side-by-side", "A", "FreezeMax Innovate X", "Negru", "Sertar FreshZone - Da; Material rafturi - Plastic; Iluminare interior - Da, neon; Picioare - Da, ajustabile spate; Lungime cablu - 1.9m", 250.0f, 65, 1800.0f, 4.5f, "50x70x130", 70.0f, 36, 18);
        f10 = new Frigider(false, "Static", 1, "Analog", 4, false, false, 40, "Indesit", "Frigider cu o singura usa", "A++", "PolarCool Galaxy Z3", "Rosu", "Functie super-racire - Da; Material rafturi - Metal; Iluminare interior - Da, halogen; Picioare - Da, ajustabile fata; Lungime cablu - 1.8m", 200.0f, 40, 1300.0f, 4.0f, "65x85x140", 85.0f, 24, 12);
        f11 = new Frigider(true, "NoFrost", 2, "Digital", 4, true, false, 42, "Sony", "Frigider cu doua usi", "A++", "SmartFreeze X3000", "Inox", "Dispenser apa - Da; Material rafturi - Sticla securizata; Iluminare interior - Da, LED; Picioare - Da, ajustabile spate; Lungime cablu - 1.8m", 230.0f, 53, 1550.0f, 4.3f, "68x88x158", 88.0f, 28, 15);
        f12 = new Frigider(false, "Static", 1, "Analog", 3, false, false, 40, "Panasonic", "Frigider cu o singura usa", "A+", "CoolBreeze Z200", "Alb", "Functie dezghetare automata - Da; Material rafturi - Plastic; Iluminare interior - Da, neon; Picioare - Da, ajustabile fata; Lungime cablu - 1.7m", 190.0f, 38, 1250.0f, 4.0f, "62x78x142", 78.0f, 20, 12);
        f13 = new Frigider(true, "NoFrost", 3, "Digital", 5, true, true, 48, "Sony", "Frigider cu doua usi", "A++", "IceMaster Z800", "Negru", "Sistem anti-amprenta - Da; Material rafturi - Sticla securizata; Iluminare interior - Da, LED; Picioare - Da, ajustabile spate; Lungime cablu - 1.9m", 260.0f, 48, 1450.0f, 4.5f, "70x90x160", 90.0f, 32, 18);
        f14 = new Frigider(false, "Static", 2, "Analog", 4, false, true, 40, "Panasonic", "Frigider cu doua usi", "A++", "FreshCool Z400", "Alb", "Functie economisire energie - Da; Material rafturi - Metal; Iluminare interior - Da, LED; Picioare - Da, ajustabile fata; Lungime cablu - 1.6m", 210.0f, 42, 1350.0f, 4.2f, "68x88x158", 88.0f, 24, 15);
        f15 = new Frigider(true, "NoFrost", 1, "Digital", 3, true, false, 44, "LG", "Frigider cu o singura usa", "A", "FreezeGuard X200", "Argintiu", "Sertar legume/fructe - Da; Material rafturi - Plastic; Iluminare interior - Da, halogen; Picioare - Da, ajustabile spate; Lungime cablu - 1.7m", 220.0f, 52, 1600.0f, 4.2f, "55x75x130", 75.0f, 22, 10);

        Frigider[] vectFrigidere = {f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15};

        int numarAparitii = 1;
        for (Frigider vectFrigidere1 : vectFrigidere) {
            boolean b = true;

            if (jRadioButton13.isSelected() && !vectFrigidere1.getSistemDeRacire().equals("NoFrost") && !(jRadioButton14.isSelected() && vectFrigidere1.getSistemDeRacire().equals("Static"))) {
                b = false;
            }
            if (jRadioButton14.isSelected() && !vectFrigidere1.getSistemDeRacire().equals("Static") && !(jRadioButton13.isSelected() && vectFrigidere1.getSistemDeRacire().equals("NoFrost"))) {
                b = false;
            }
            if (jRadioButton15.isSelected() && !vectFrigidere1.getControlTemperatura().equals("Analog") && !(jRadioButton16.isSelected() && vectFrigidere1.getControlTemperatura().equals("Digital"))) {
                b = false;
            }
            if (jRadioButton16.isSelected() && !vectFrigidere1.getControlTemperatura().equals("Digital") && !(jRadioButton15.isSelected() && vectFrigidere1.getControlTemperatura().equals("Analog"))) {
                b = false;
            }
            if (jRadioButton17.isSelected() && !vectFrigidere1.isDozatorApa() == true && !(jRadioButton18.isSelected() && vectFrigidere1.isDozatorApa() == false)) {
                b = false;
            }
            if (jRadioButton18.isSelected() && !vectFrigidere1.isDozatorApa() == false && !(jRadioButton17.isSelected() && vectFrigidere1.isDozatorApa() == true)) {
                b = false;
            }
            if (b == true) {
                jTextArea9.append("\n" + numarAparitii + "." + vectFrigidere1);
                numarAparitii++;
            }
        }
        if (!jRadioButton13.isSelected() && !jRadioButton14.isSelected() && !jRadioButton15.isSelected() && !jRadioButton16.isSelected() && !jRadioButton17.isSelected() && !jRadioButton18.isSelected()) {
            JOptionPane.showMessageDialog(null, "Nu ați ales modalitatea de filtrare", "Eroare", JOptionPane.WARNING_MESSAGE);
            jTextArea9.setText(null);
        }
    }//GEN-LAST:event_button_frigiderActionPerformed

    private void button_CongelatorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_CongelatorActionPerformed
        // TODO add your handling code here:
        Congelator cg1, cg2, cg3, cg4, cg5, cg6, cg7, cg8, cg9, cg10, cg11, cg12, cg13, cg14, cg15;

        cg1 = new Congelator("Static", 1, "Analog", 5, true, 40, "Samsung", "Congelator cu o singura usa verticala", "A++", "FrostMaster FX-2000", "Alb", "Sistem dezghetare - Manual; Preparare automata cuburi de gheata - Nu; Iluminare interior - Nu; Maner - Nu", 200.0f, 50, 1500.0f, 4.5f, "60x80x150", 80.0f, 24, 12);
        cg2 = new Congelator("Static", 2, "Analog", 4, true, 45, "Bosch", "Congelator cu doua usi laterale", "A+", "IceTech FreezePro X7", "Negru", "Sistem dezghetare - Automat; Preparare automata cuburi de gheata - Da; Iluminare interior - Da; Maner - Da", 250.0f, 30, 1200.0f, 4.0f, "70x90x160", 90.0f, 18, 10);
        cg3 = new Congelator("NoFrost", 3, "Analog", 3, true, 50, "Wirlpool", "Congelator cu usa superioara", "A", "CoolChill Elite 3000", "Argintiu", "Sistem dezghetare - Manual; Preparare automata cuburi de gheata - Nu; Iluminare interior - Nu; Maner - Nu", 180.0f, 40, 1300.0f, 4.2f, "50x70x130", 70.0f, 12, 6);
        cg4 = new Congelator("Static", 2, "Analog", 4, false, 42, "Electrolux", "Congelator cu doua usi superioare", "A++", "ArcticFrost UltraCool 500", "Alb", "Sistem dezghetare - Automat; Preparare automata cuburi de gheata - Nu; Iluminare interior - Da; Maner - Da", 220.0f, 60, 1700.0f, 4.8f, "65x85x140", 85.0f, 36, 24);
        cg5 = new Congelator("NoFrost", 2, "Digital", 5, true, 48, "Haier", "Congelator cu usa inferioara", "A+", "FreezeMax PowerIce 700", "Alb", "Sistem dezghetare - Manual; Preparare automata cuburi de gheata - Da; Iluminare interior - Nu; Maner - Nu", 240.0f, 45, 1400.0f, 4.5f, "75x95x170", 95.0f, 30, 18);
        cg6 = new Congelator("NoFrost", 3, "Analog", 3, true, 55, "LG", "Congelator cu doua usi inferioare", "A", "ChillMaster FrostGuard 220", "Negru", "Sistem dezghetare - Automat; Preparare automata cuburi de gheata - Da; Iluminare interior - Nu; Maner - Da", 200.0f, 55, 1600.0f, 4.0f, "55x75x120", 75.0f, 24, 12);
        cg7 = new Congelator("NoFrost", 1, "Analog", 4, true, 38, "Indesit", "Congelator tip sertar", "A++", "GlacierTech FrostBlast X9", "Alb", "Sistem dezghetare - Manual; Preparare automata cuburi de gheata - Nu; Iluminare interior - Da; Maner - Nu", 180.0f, 35, 1200.0f, 4.2f, "60x80x150", 80.0f, 18, 10);
        cg8 = new Congelator("Static", 2, "Analog", 5, false, 43, "Beko", "Congelator sub tejghea", "A+", "FreezeZone ArcticWave 800", "Argintiu", "Sistem dezghetare - Automat; Preparare automata cuburi de gheata - Nu; Iluminare interior - Nu; Maner - Da", 220.0f, 50, 1400.0f, 4.8f, "70x90x160", 90.0f, 30, 24);
        cg9 = new Congelator("NoFrost", 2, "Digital", 3, true, 52, "Siemens", "Congelator cu usi franceze", "A", "CoolStream MegaFreeze 550", "Negru", "Sistem dezghetare - Manual; Preparare automata cuburi de gheata - Da; Iluminare interior - Da; Maner - Nu", 250.0f, 65, 1800.0f, 4.5f, "50x70x130", 70.0f, 36, 18);
        cg10 = new Congelator("Static", 1, "Analog", 4, true, 40, "Arctic", "Congelator cu usi multiple", "A++", "IceMaster ProChill 1200", "Alb", "Sistem dezghetare - Automat; Preparare automata cuburi de gheata - Da; Iluminare interior - Da; Maner - Nu", 200.0f, 40, 1300.0f, 4.0f, "65x85x140", 85.0f, 24, 12);
        cg11 = new Congelator("NoFrost", 1, "Digital", 4, true, 42, "Whirlpool", "Congelator cu usa superioara", "A++", "FreezeTech ChillBlast 500", "Inox", "Sistem dezghetare - Automat; Preparare automata cuburi de gheata - Da; Iluminare interior - Da; Maner - Da", 210.0f, 55, 1600.0f, 4.2f, "60x80x150", 80.0f, 24, 12);
        cg12 = new Congelator("Static", 2, "Analog", 5, false, 48, "LG", "Congelator sub tejghea", "A+", "ChillZone FrostGuard X6", "Negru", "Sistem dezghetare - Automat; Preparare automata cuburi de gheata - Nu; Iluminare interior - Nu; Maner - Da", 230.0f, 40, 1400.0f, 4.5f, "70x90x160", 90.0f, 30, 18);
        cg13 = new Congelator("NoFrost", 3, "Digital", 4, true, 50, "Samsung", "Congelator cu usa inferioara", "A++", "FrostMaster ProIce 700", "Alb", "Sistem dezghetare - Automat; Preparare automata cuburi de gheata - Da; Iluminare interior - Nu; Maner - Nu", 220.0f, 45, 1500.0f, 4.0f, "75x95x170", 95.0f, 36, 24);
        cg14 = new Congelator("Static", 1, "Analog", 3, false, 38, "Beko", "Congelator tip sertar", "A", "FreezeZone FrostBlast X4", "Argintiu", "Sistem dezghetare - Manual; Preparare automata cuburi de gheata - Nu; Iluminare interior - Da; Maner - Nu", 180.0f, 35, 1200.0f, 4.2f, "55x75x120", 75.0f, 18, 10);
        cg15 = new Congelator("NoFrost", 2, "Digital", 5, true, 55, "Siemens", "Congelator cu usi franceze", "A+", "CoolStream MegaFreeze 800", "Inox", "Sistem dezghetare - Automat; Preparare automata cuburi de gheata - Da; Iluminare interior - Da; Maner - Da", 240.0f, 60, 1700.0f, 4.8f, "65x85x140", 85.0f, 24, 12);

        Congelator[] vectCongelatoare = {cg1, cg2, cg3, cg4, cg5, cg6, cg7, cg8, cg9, cg10, cg11, cg12, cg13, cg14, cg15};

        int numarAparitii = 1;
        for (Congelator vectCongelatoare1 : vectCongelatoare) {
            boolean b = true;

            if (jRadioButton19.isSelected() && !vectCongelatoare1.getSistemDeRacire().equals("NoFrost") && !(jRadioButton20.isSelected() && vectCongelatoare1.getSistemDeRacire().equals("Static"))) {
                b = false;
            }
            if (jRadioButton20.isSelected() && !vectCongelatoare1.getSistemDeRacire().equals("Static") && !(jRadioButton19.isSelected() && vectCongelatoare1.getSistemDeRacire().equals("NoFrost"))) {
                b = false;
            }
            if (jRadioButton21.isSelected() && !vectCongelatoare1.getControlTemperatura().equals("Analog") && !(jRadioButton22.isSelected() && vectCongelatoare1.getControlTemperatura().equals("Digital"))) {
                b = false;
            }
            if (jRadioButton22.isSelected() && !vectCongelatoare1.getControlTemperatura().equals("Digital") && !(jRadioButton21.isSelected() && vectCongelatoare1.getControlTemperatura().equals("Analog"))) {
                b = false;
            }
            if (jRadioButton23.isSelected() && !vectCongelatoare1.isCutieFructesiLegume() == true && !(jRadioButton24.isSelected() && vectCongelatoare1.isCutieFructesiLegume() == false)) {
                b = false;
            }
            if (jRadioButton24.isSelected() && !vectCongelatoare1.isCutieFructesiLegume() == false && !(jRadioButton23.isSelected() && vectCongelatoare1.isCutieFructesiLegume() == true)) {
                b = false;
            }
            if (b == true) {
                jTextArea2.append("\n" + numarAparitii + "." + vectCongelatoare1);
                numarAparitii++;
            }
        }
        if (!jRadioButton19.isSelected() && !jRadioButton20.isSelected() && !jRadioButton21.isSelected() && !jRadioButton22.isSelected() && !jRadioButton23.isSelected() && !jRadioButton24.isSelected()) {
            JOptionPane.showMessageDialog(null, "Nu ați ales modalitatea de filtrare", "Eroare", JOptionPane.WARNING_MESSAGE);
            jTextArea2.setText(null);
    }//GEN-LAST:event_button_CongelatorActionPerformed
    }

    private void button_toate_MasinileDeSpalatVaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_toate_MasinileDeSpalatVaseActionPerformed
        // TODO add your handling code here:
        MasinaDeSpalatVase v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15;

        v1 = new MasinaDeSpalatVase("Masina de spalat vase independenta", "GORENJE", "GS520E15S", "Semnal optic si acustic la sfarsitul programului, Sistem de diagnosticare a defectiunilor", 9, 5, "E", 1754.90f, 36.5f, "44.8 x 60 x 84.5", "Inox", "LED / Electronic", 2, "Electronic", "Inox", "Program rapid, Pre-clatire/Inmuiere, Intensiv, Program ECO, Program 1h", 'A', 'A', "3:55", 70, 9, 'C', 1760, 4.33f, 3, 12, 24);
        v2 = new MasinaDeSpalatVase("Masina de spalat vase semi-incorporabila", "ELECTROLUX", "EEM43300IX", "Brat pulverizator FlexiSpray Satellite, Extra igienizare, GlassCare, XtraPower, sistem de uscare AirDry", 10, 8, "D", 2499.90f, 34.8f, "45 x 55 x 81.8", "Inox", "LED / Butoane", 2, "Electronic", "Inox", "160 min, 60 min, 90 min, AUTO Sense, Eco, Machine Care, Quick 30 min, Clatire & Pauza", 'D', 'A', "4:00", 67, 9.9f, 'B', 1950, 4.5f, 2, 12, 24);
        v3 = new MasinaDeSpalatVase("Masina de spalat vase independenta", "BEKO", "DVN06430X", "Flexible HalfLoad , All in 1, Deschidere automata usa, Sistem control exces apa, Senzor murdarire, Indicator sare, Indicator clatire suplimentara", 14, 6, "D", 1839.90f, 43.2f, "59.8 x 60 x 85", "Inox", "LED / Mecanic", 3, "Mecanic", "Otel inoxidabil", "Quick&Shine , Eco 50 C, Auto Program, Intensive 70 C, Mini 30', Delicate 40'", 'D', 'A', "3:20", 85, 11.5f, 'C', 1900, 4.89f, 35, 12, 24);
        v4 = new MasinaDeSpalatVase("Masina de spalat vase independenta", "BOSCH", "SKS51E32EU", "ExtraDry, EcoSilence Drive, Detergent Automation, Senzor de incarcare, Sistem de protectie a paharelor, 5 nivele de temperatura, Circuit electronic de regenerare a sarii de dedurizare, Pompa de incalzire", 6, 5, "F", 1549.90f, 20.95f, "55.1 x 50 x 45", "Alb", "LED / Mecanic", 1, "Mecanic", "Inox", "Intensiv 70, Normal 65, Eco 50, Glass 40, Spalare rapida 45", 'F', 'B', "03:55", 61, 8, 'C', 2400, 4.38f, 8, 12, 24);
        v5 = new MasinaDeSpalatVase("Masina de spalat vase independenta", "INDESIT", "DSFE1B10", "Incarcare la jumatate", 10, 6, "F", 1599.90f, 34.9f, "45 x 59 x 85", "Alb", "Buton central", 2, "Electronic", "Otel inoxidabil", "Eco, Intensiv, Normal, Rapid 40 min, Incarcare pe jumatate, Inmuiere", 'F', 'A', "04:00", 84, 11.5f, 'D', 1900, 5, 3, 12, 24);
        v6 = new MasinaDeSpalatVase("Masina de spalat vase incorporabila", "ELECTROLUX", "EEM48221L", "Time Beam, Brat pulverizator FlexiSpray Satellite, Extra igienizare, GlassCare, XtraPower, sistem de uscare AirDry", 14, 8, "E", 2750.90f, 38.4f, "59.6 x 55 x 81.8", "Alb", "LED / Butoane", 2, "Electronic", "Inox", "160 min, 60 min, 90 min, AUTO Sense, Eco, Machine Care, Quick 30 min, Clatire & Pauza", 'E', 'A', "04:00", 95, 10.5f, 'B', 1950, 5, 3, 24, 24);
        v7 = new MasinaDeSpalatVase("Masina de spalat vase incorporabila", "WHIRLPOOL", "WSBO3O34PFX", "Tehnologia al-6-lea Simt, PowerClean, Pornire Programata, Sistem Natural Dry", 10, 8, "D", 2049.90f, 29.6f, "44.8 x 55.5 x 82", "Inox", "Digital", 3, "Electronic", "Otel inoxidabil", "Eco, 6th Sense, Intensiv, Zilnic, Cristal, Rapid 30 min, Prespalare, Autocuratare", 'D', 'A', "03:40", 67, 9, 'B', 1900, 4.86f, 7, 12, 24);
        v8 = new MasinaDeSpalatVase("Masina de spalat vase independenta", "GORENJE", "GS541D10X", "TotalDry, Motor Inverder PowerDrive", 9, 5, "D", 1079.51f, 38.2f, "44.8 x 60 x 84.5", "Argintiu", "LED / Electronic", 3, "Electronic", "Otel inoxidabil", "Program automat, Intensiv, Program Eco, Program pentru sticle", 'B', 'A', "03:25", 72, 9.5f, 'C', 1760, 4.92f, 13, 12, 24);
        v9 = new MasinaDeSpalatVase("Masina de spalat vase incorporabila", "BOSCH", "SPV4EMX60E", "Conectivitate Wi-Fi / aplicatie Home Connect, DosageAssist, Sistem AquaStop, Semnal sonor la terminarea programului, Afisare timp ramas, InfoLight", 10, 6, "F", 2999.90f, 29.9f, "44.8 x 55 x 81.5", "Inox", "LED / Taste", 3, "Electronic", "Inox", "Eco 50 C, Auto 45-65 C, Intensive 70 C, Program 1h 65 C, Silence 50 C, Program favorit", 'A', 'A', "04:16", 67, 6.7f, 'C', 2400, 4.69f, 16, 12, 24);
        v10 = new MasinaDeSpalatVase("Masina de spalat vase independenta", "GORENJE", "GS62040S", "Total AquaStop", 12, 5, "E", 1610.90f, 43, "60 x 60 x 84.5", "Argintiu", "LED / Mecanic", 2, "Mecanic", "Otel inoxidabil", "Program rapid, Intensiv, Program Eco, Inmuiere, Spalare zilnica", 'C', 'A', "03:57", 93, 11, 'C', 1850, 3, 4, 12, 24);
        v11 = new MasinaDeSpalatVase("Masina de spalat vase independenta", "HOTPOINT", "HSFO 3T235 WC X", "3D Zone Wash, ActivEco, FlexiLoad, Programe automate, Clatire igienizanta, Pornire programata", 10, 9, "D", 2369.90f, 39.5f, "45 x 59 x 85", "Inox", "Digital", 2, "Electronic", "Otel inoxidabil", "Eco, Auto intensiv, Auto normal, Zilnic, Expres 30, Good night, Igienizare, Inmuiere, Autocuratare", 'D', 'A', "03:40", 67, 9, 'C', 1900, 5, 5, 12, 24);
        v12 = new MasinaDeSpalatVase("Masina de spalat vase independenta", "CANDY", "CDCP 8", "Indicator sonor finalizare ciclu, Indicator sare si agent clatire", 8, 6, "F", 1259.91f, 27, "55 x 50 x 60", "Alb", "Digital", 2, "Mecanic", "Inox", "Eco, Intensiv 65 C, Rapid 35', Zlnic, Sticla", 'F', 'A', "03:40", 72, 8, 'D', 1900, 4.2f, 5, 12, 24);
        v13 = new MasinaDeSpalatVase("Masina de spalat vase independenta", "SHARP", "QW-NA1CF47ES-EU", "Sistem de uscare activ, EcoWash", 13, 4, "E", 1255.92f, 46, "59.8 x 59.8 x 85", "Argintiu", "Afisaj grafic", 2, "Electronic", "Inox", "Eco 50 C, Intensive 65 C, Express 50', Quick 30'", 'E', 'A', "03:25", 94, 12, 'C', 1850, 4.67f, 3, 12, 24);
        v14 = new MasinaDeSpalatVase("Masina de spalat vase incorporabila", "BOSCH", "SMV46KX55E", "ExtraDry, Silence, Setare VarioFlex, EcoSilence Drive, DosageAssist, Aqua Sensor, Load Sensor, Sistem de protectie a paharelor, Circuit electronic de regenerare a sarii de dedurizare, Sistem de spalare cu schimbator de caldura (Heat exchanger), Pompa de incalzire, Tehnica de spalare cu alternare", 13, 6, "E", 2499.90f, 36.8f, "59.8 x 55 x 81.5", "Inox", "LED / Electronic", 2, "Electronic", "Inox/Polinox", "Intensiv 70  C, Auto 45-65  C, Eco 50  C, Silence 50  C, Pahare 40  C, Program 1h 65  C", 'E', 'A', "03:30", 94, 9.5f, 'B', 2400, 4.55f, 11, 12, 24);
        v15 = new MasinaDeSpalatVase("Masina de spalat vase independenta", "ARCTIC", "DBI542", "Aqua protect, Sistem dedurizare apa, Pornire intarziata, Sistem de uscare static, Indicator LED status program, Indicator nivel sare si substanta clatire, Incarcare la jumatate, Optimizare ciclu de spalare pentru tableta de detergent", 14, 5, "E", 1648.99f, 34.4f, "59.8 x 55 x 81.8", "Alb", "LED Touch Control", 3, "Electronic", "Otel inoxidabil", "Eco 50, Express 30', Intensiv 70 C, Extra 58', Curatare / Uscare", 'E', 'A', "03:25", 95, 12.9f, 'C', 1850, 4.62f, 13, 12, 24);

        MasinaDeSpalatVase[] vectMasinaDeSpalatVase = {v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15};

        int numarAparitii = 1;
        for (MasinaDeSpalatVase vectMasinaDeSpalatVase1 : vectMasinaDeSpalatVase) {

            Text_MasinaDeSpalatVase.append("\n\n" + numarAparitii + "." + vectMasinaDeSpalatVase1);
            numarAparitii++;
            jRadioButton7.setSelected(false);
            jRadioButton8.setSelected(false);
            jRadioButton9.setSelected(false);
            jRadioButton10.setSelected(false);
            jRadioButton11.setSelected(false);
            jRadioButton12.setSelected(false);
        }
    }//GEN-LAST:event_button_toate_MasinileDeSpalatVaseActionPerformed

    private void button_toateFrigidereleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_toateFrigidereleActionPerformed
        // TODO add your handling code here:

        Frigider f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15;

        f1 = new Frigider(true, "NoFrost", 1, "Digital", 5, true, false, 40, "Samsung", "Frigider cu o singura usa", "A++", "EliteCool Pro X200", "Alb", "Dispenser apa - Da; Material rafturi - Plastic; Iluminare interior - Da, neon; Picioare - Da, ajustabile spate; Lungime cablu - 1.8m", 200.0f, 50, 1500.0f, 4.5f, "60x80x150", 80.0f, 24, 12);
        f2 = new Frigider(true, "Static", 2, "Digital", 4, false, false, 45, "LG", "Frigider cu doua usi", "A+", "FreshFrost Ultra 3000", "Negru", "Functie dezghetare rapida - Da; Material rafturi - Metal; Iluminare interior - Da, LED; Picioare - Da, ajustabile fata; Lungime cablu - 1.6m", 250.0f, 30, 1200.0f, 4.0f, "70x90x160", 90.0f, 18, 10);
        f3 = new Frigider(true, "NoFrost", 2, "Digital", 3, true, true, 50, "Whirlpool", "Frigider cu doua usi", "A", "ArcticBreeze Elite Z", "Argintiu", "Sistem anti-amprenta - Da; Material rafturi - Sticla securizata; Iluminare interior - Da, halogen; Picioare - Da, ajustabile spate; Lungime cablu - 1.9m", 180.0f, 40, 1300.0f, 4.2f, "50x70x130", 70.0f, 12, 6);
        f4 = new Frigider(true, "Static", 1, "Analog", 4, false, false, 42, "Bosch", "Frigider cu o singura usa", "A++", "CoolMaster Inox 500", "Alb", "Sertar legume/fructe - Da; Material rafturi - Plastic; Iluminare interior - Da, LED; Picioare - Da, ajustabile fata; Lungime cablu - 1.7m", 220.0f, 60, 1700.0f, 4.8f, "65x85x140", 85.0f, 36, 24);
        f5 = new Frigider(false, "NoFrost", 2, "Digital", 5, true, true, 48, "Haier", "Frigider side-by-side", "A+", "IceTech Luxor 8000", "Rosu", "Functie economisire energie - Da; Material rafturi - Sticla securizata; Iluminare interior - Da, LED; Picioare - Da, ajustabile spate; Lungime cablu - 1.5m", 240.0f, 45, 1400.0f, 4.5f, "75x95x170", 95.0f, 30, 18);
        f6 = new Frigider(false, "Static", 3, "Analog", 3, false, false, 55, "Electrolux", "Frigider cu doua usi", "A", "ChillWave Platinum Plus", "Negru", "Sistem de filtrare aer - Da; Material rafturi - Metal; Iluminare interior - Da, neon; Picioare - Da, ajustabile fata; Lungime cablu - 1.8m", 200.0f, 55, 1600.0f, 4.0f, "55x75x120", 75.0f, 24, 12);
        f7 = new Frigider(true, "NoFrost", 2, "Digital", 4, true, true, 38, "Beko", "Frigider cu doua usi", "A++", "FrostGuardian Supreme 700", "Alb", "Dozator apa si gheata - Da; Material rafturi - Plastic; Iluminare interior - Da, halogen; Picioare - Da, ajustabile spate; Lungime cablu - 1.7m", 180.0f, 35, 1200.0f, 4.2f, "60x80x150", 80.0f, 18, 10);
        f8 = new Frigider(true, "Static", 2, "Analog", 5, false, false, 43, "Hotpoint", "Frigider cu doua usi", "A+", "CrystalChill Diamond 900", "Argintiu", "Functie vacanta - Da; Material rafturi - Sticla; Iluminare interior - Da, LED; Picioare - Da, ajustabile fata; Lungime cablu - 1.6m", 220.0f, 50, 1400.0f, 4.8f, "70x90x160", 90.0f, 30, 24);
        f9 = new Frigider(true, "NoFrost", 3, "Digital", 3, true, true, 52, "Siemens", "Frigider side-by-side", "A", "FreezeMax Innovate X", "Negru", "Sertar FreshZone - Da; Material rafturi - Plastic; Iluminare interior - Da, neon; Picioare - Da, ajustabile spate; Lungime cablu - 1.9m", 250.0f, 65, 1800.0f, 4.5f, "50x70x130", 70.0f, 36, 18);
        f10 = new Frigider(false, "Static", 1, "Analog", 4, false, false, 40, "Indesit", "Frigider cu o singura usa", "A++", "PolarCool Galaxy Z3", "Rosu", "Functie super-racire - Da; Material rafturi - Metal; Iluminare interior - Da, halogen; Picioare - Da, ajustabile fata; Lungime cablu - 1.8m", 200.0f, 40, 1300.0f, 4.0f, "65x85x140", 85.0f, 24, 12);
        f11 = new Frigider(true, "NoFrost", 2, "Digital", 4, true, false, 42, "Sony", "Frigider cu doua usi", "A++", "SmartFreeze X3000", "Inox", "Dispenser apa - Da; Material rafturi - Sticla securizata; Iluminare interior - Da, LED; Picioare - Da, ajustabile spate; Lungime cablu - 1.8m", 230.0f, 53, 1550.0f, 4.3f, "68x88x158", 88.0f, 28, 15);
        f12 = new Frigider(false, "Static", 1, "Analog", 3, false, false, 40, "Panasonic", "Frigider cu o singura usa", "A+", "CoolBreeze Z200", "Alb", "Functie dezghetare automata - Da; Material rafturi - Plastic; Iluminare interior - Da, neon; Picioare - Da, ajustabile fata; Lungime cablu - 1.7m", 190.0f, 38, 1250.0f, 4.0f, "62x78x142", 78.0f, 20, 12);
        f13 = new Frigider(true, "NoFrost", 3, "Digital", 5, true, true, 48, "Sony", "Frigider cu doua usi", "A++", "IceMaster Z800", "Negru", "Sistem anti-amprenta - Da; Material rafturi - Sticla securizata; Iluminare interior - Da, LED; Picioare - Da, ajustabile spate; Lungime cablu - 1.9m", 260.0f, 48, 1450.0f, 4.5f, "70x90x160", 90.0f, 32, 18);
        f14 = new Frigider(false, "Static", 2, "Analog", 4, false, true, 40, "Panasonic", "Frigider cu doua usi", "A++", "FreshCool Z400", "Alb", "Functie economisire energie - Da; Material rafturi - Metal; Iluminare interior - Da, LED; Picioare - Da, ajustabile fata; Lungime cablu - 1.6m", 210.0f, 42, 1350.0f, 4.2f, "68x88x158", 88.0f, 24, 15);
        f15 = new Frigider(true, "NoFrost", 1, "Digital", 3, true, false, 44, "LG", "Frigider cu o singura usa", "A", "FreezeGuard X200", "Argintiu", "Sertar legume/fructe - Da; Material rafturi - Plastic; Iluminare interior - Da, halogen; Picioare - Da, ajustabile spate; Lungime cablu - 1.7m", 220.0f, 52, 1600.0f, 4.2f, "55x75x130", 75.0f, 22, 10);

        Frigider[] vectFrigidere = {f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15};

        int numarAparitii = 1;
        for (Frigider vectFrigidere1 : vectFrigidere) {
            jTextArea9.append("\n\n" + numarAparitii + "." + vectFrigidere1);
            numarAparitii++;
            jRadioButton13.setSelected(false);
            jRadioButton14.setSelected(false);
            jRadioButton15.setSelected(false);
            jRadioButton16.setSelected(false);
            jRadioButton17.setSelected(false);
            jRadioButton18.setSelected(false);
        }
    }//GEN-LAST:event_button_toateFrigidereleActionPerformed

    private void button_toateCongelatoareleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_toateCongelatoareleActionPerformed
        // TODO add your handling code here:
        Congelator cg1, cg2, cg3, cg4, cg5, cg6, cg7, cg8, cg9, cg10, cg11, cg12, cg13, cg14, cg15;

        cg1 = new Congelator("Static", 1, "Analog", 5, true, 40, "Samsung", "Congelator cu o singura usa verticala", "A++", "FrostMaster FX-2000", "Alb", "Sistem dezghetare - Manual; Preparare automata cuburi de gheata - Nu; Iluminare interior - Nu; Maner - Nu", 200.0f, 50, 1500.0f, 4.5f, "60x80x150", 80.0f, 24, 12);
        cg2 = new Congelator("Static", 2, "Analog", 4, true, 45, "Bosch", "Congelator cu doua usi laterale", "A+", "IceTech FreezePro X7", "Negru", "Sistem dezghetare - Automat; Preparare automata cuburi de gheata - Da; Iluminare interior - Da; Maner - Da", 250.0f, 30, 1200.0f, 4.0f, "70x90x160", 90.0f, 18, 10);
        cg3 = new Congelator("NoFrost", 3, "Analog", 3, true, 50, "Wirlpool", "Congelator cu usa superioara", "A", "CoolChill Elite 3000", "Argintiu", "Sistem dezghetare - Manual; Preparare automata cuburi de gheata - Nu; Iluminare interior - Nu; Maner - Nu", 180.0f, 40, 1300.0f, 4.2f, "50x70x130", 70.0f, 12, 6);
        cg4 = new Congelator("Static", 2, "Analog", 4, false, 42, "Electrolux", "Congelator cu doua usi superioare", "A++", "ArcticFrost UltraCool 500", "Alb", "Sistem dezghetare - Automat; Preparare automata cuburi de gheata - Nu; Iluminare interior - Da; Maner - Da", 220.0f, 60, 1700.0f, 4.8f, "65x85x140", 85.0f, 36, 24);
        cg5 = new Congelator("NoFrost", 2, "Digital", 5, true, 48, "Haier", "Congelator cu usa inferioara", "A+", "FreezeMax PowerIce 700", "Alb", "Sistem dezghetare - Manual; Preparare automata cuburi de gheata - Da; Iluminare interior - Nu; Maner - Nu", 240.0f, 45, 1400.0f, 4.5f, "75x95x170", 95.0f, 30, 18);
        cg6 = new Congelator("NoFrost", 3, "Analog", 3, true, 55, "LG", "Congelator cu doua usi inferioare", "A", "ChillMaster FrostGuard 220", "Negru", "Sistem dezghetare - Automat; Preparare automata cuburi de gheata - Da; Iluminare interior - Nu; Maner - Da", 200.0f, 55, 1600.0f, 4.0f, "55x75x120", 75.0f, 24, 12);
        cg7 = new Congelator("NoFrost", 1, "Analog", 4, true, 38, "Indesit", "Congelator tip sertar", "A++", "GlacierTech FrostBlast X9", "Alb", "Sistem dezghetare - Manual; Preparare automata cuburi de gheata - Nu; Iluminare interior - Da; Maner - Nu", 180.0f, 35, 1200.0f, 4.2f, "60x80x150", 80.0f, 18, 10);
        cg8 = new Congelator("Static", 2, "Analog", 5, false, 43, "Beko", "Congelator sub tejghea", "A+", "FreezeZone ArcticWave 800", "Argintiu", "Sistem dezghetare - Automat; Preparare automata cuburi de gheata - Nu; Iluminare interior - Nu; Maner - Da", 220.0f, 50, 1400.0f, 4.8f, "70x90x160", 90.0f, 30, 24);
        cg9 = new Congelator("NoFrost", 2, "Digital", 3, true, 52, "Siemens", "Congelator cu usi franceze", "A", "CoolStream MegaFreeze 550", "Negru", "Sistem dezghetare - Manual; Preparare automata cuburi de gheata - Da; Iluminare interior - Da; Maner - Nu", 250.0f, 65, 1800.0f, 4.5f, "50x70x130", 70.0f, 36, 18);
        cg10 = new Congelator("Static", 1, "Analog", 4, true, 40, "Arctic", "Congelator cu usi multiple", "A++", "IceMaster ProChill 1200", "Alb", "Sistem dezghetare - Automat; Preparare automata cuburi de gheata - Da; Iluminare interior - Da; Maner - Nu", 200.0f, 40, 1300.0f, 4.0f, "65x85x140", 85.0f, 24, 12);
        cg11 = new Congelator("NoFrost", 1, "Digital", 4, true, 42, "Whirlpool", "Congelator cu usa superioara", "A++", "FreezeTech ChillBlast 500", "Inox", "Sistem dezghetare - Automat; Preparare automata cuburi de gheata - Da; Iluminare interior - Da; Maner - Da", 210.0f, 55, 1600.0f, 4.2f, "60x80x150", 80.0f, 24, 12);
        cg12 = new Congelator("Static", 2, "Analog", 5, false, 48, "LG", "Congelator sub tejghea", "A+", "ChillZone FrostGuard X6", "Negru", "Sistem dezghetare - Automat; Preparare automata cuburi de gheata - Nu; Iluminare interior - Nu; Maner - Da", 230.0f, 40, 1400.0f, 4.5f, "70x90x160", 90.0f, 30, 18);
        cg13 = new Congelator("NoFrost", 3, "Digital", 4, true, 50, "Samsung", "Congelator cu usa inferioara", "A++", "FrostMaster ProIce 700", "Alb", "Sistem dezghetare - Automat; Preparare automata cuburi de gheata - Da; Iluminare interior - Nu; Maner - Nu", 220.0f, 45, 1500.0f, 4.0f, "75x95x170", 95.0f, 36, 24);
        cg14 = new Congelator("Static", 1, "Analog", 3, false, 38, "Beko", "Congelator tip sertar", "A", "FreezeZone FrostBlast X4", "Argintiu", "Sistem dezghetare - Manual; Preparare automata cuburi de gheata - Nu; Iluminare interior - Da; Maner - Nu", 180.0f, 35, 1200.0f, 4.2f, "55x75x120", 75.0f, 18, 10);
        cg15 = new Congelator("NoFrost", 2, "Digital", 5, true, 55, "Siemens", "Congelator cu usi franceze", "A+", "CoolStream MegaFreeze 800", "Inox", "Sistem dezghetare - Automat; Preparare automata cuburi de gheata - Da; Iluminare interior - Da; Maner - Da", 240.0f, 60, 1700.0f, 4.8f, "65x85x140", 85.0f, 24, 12);

        Congelator[] vectCongelatoare = {cg1, cg2, cg3, cg4, cg5, cg6, cg7, cg8, cg9, cg10, cg11, cg12, cg13, cg14, cg15};

        int numarAparitii = 1;
        for (Congelator vectCongelatoare1 : vectCongelatoare) {
            jTextArea2.append("\n\n" + numarAparitii + "." + vectCongelatoare1);
            numarAparitii++;
            jRadioButton19.setSelected(false);
            jRadioButton20.setSelected(false);
            jRadioButton21.setSelected(false);
            jRadioButton22.setSelected(false);
            jRadioButton23.setSelected(false);
            jRadioButton24.setSelected(false);
        }
    }//GEN-LAST:event_button_toateCongelatoareleActionPerformed

    private void jc2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jc2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jc2ActionPerformed

    private void jc3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jc3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jc3ActionPerformed

    private void jc4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jc4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jc4ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        jTextArea5.setText(null);
        jc1.setSelected(false);
        jc2.setSelected(false);
        jc3.setSelected(false);
        jc4.setSelected(false);
        jc5.setSelected(false);
        jc6.setSelected(false);
        jc7.setSelected(false);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void btnAragaz6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAragaz6ActionPerformed
        // TODO add your handling code here:
        jTextArea5.setText(null);
        Cuptor c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15;
        c1 = new Cuptor("Cuptor incorporabil electric", "GORENJE", "BPS6737E14X", "pirolitica", 73, "A+", "amortizata", 13, "Forma HomeMade; Racire DC+; SuperSize; PizzaFunction; StepBake; GentleBake; FastPreheat; AirFry; FrozenBake; Gratin; SteamAssist", "IconLed", true, 3500f, 220f, 50f, 1.172f, 39.5f, "59.5 x 56.4 x 59.5", "alb", 5f, 3, 24, 24);
        c2 = new Cuptor("Cuptor incorporabil electric ", "BEKO ", "BBIS13300XMSE", "catalitica", 72, "A+", "amortizata", 9, "Iluminare interioara; Inchidere SoftClose; AEROperfect; Autocurataree SteamShine; Functii gatire: 3D Cooking; Pastrare la cald; Gatire conventionala; Grill; Dezghetare; Incalzire inferioara; Incalzire ventilata Eco; Incalzire ventilata", "LED Touch Control + Butoane", true, 0.0f, 220f, 50f, 1.098f, 31.3f, "59.4 x 56.7 x 59.5", "negru", 4.74f, 19, 12, 24);
        c3 = new Cuptor("Cuptor incorporabil cu gaz", "ELECTROLUX", "EOG2102AOX", "catalitica", 68, "A+", "standard", 7, "Inox antiamprente; curataree catalitica; Semnal sonor; Avertizare sfarsit de program; Cuptor cu rotisor; Incalzire jos; Dezghetare; Gril; Gril cu rotisor; Gatire usoara (light)", "mecanic", false, 1770f, 220f, 50f, 1.699f, 30.9f, "59.4 x 56.9 x 59.4", "inox", 4.68f, 72, 12, 24);
        c4 = new Cuptor("Cuptor incorporabil electric", "WHIRLPOOL", " AKZM 8480 S", "pirolitica", 73, "A+", "amortizata", 0, "Tehnologia Al 6-lea Simt; curataree Piroliza; Inchidere amortizata a usii; Ready2Cook; Gatire pe 3 niveluri; Rafturi glisante; Ventilator turbo; Turbo Grill; Coacere Maxi; Iluminare interioara", "LED / Mecanic + Electronic", false, 3650f, 220f, 55f, 1.999f, 39.5f, "59.5 x 56.4 x 59.5", "argintiu", 4.65f, 82, 24, 24);
        c5 = new Cuptor("Cuptor incorporabil electric", "BEKO", "BBIM13300ZGCSE", "autocuratare SteamShine", 72, "A+", "amortizata", 9, "Inchidere SoftClose; Iluminare interioara cu halogen; AEROperfect; Autocurataree Steamshine; Functii gatire: Gatire 3D; Gatire conventionala; Gatire cu ventilare; Grill; Low grill cu ventilare; Dezghetare; Incalzire inferioara; Incalzire ventilata", "LED Touch Control + Mecanic", true, 0.0f, 220f, 50f, 1.499f, 34.9f, "59.4 x 56.7 x 59.5", "gri inchis", 5, 16, 12, 24);
        c6 = new Cuptor("Cuptor incorporabil electric", "ELECTROLUX", "EOA9S31CX", "fara autocuratare", 70, "A++", "standard", 0, "	Indicator caldura reziduala; Cuptor cu afisaj in mai multe limbi; Lumina halogen cuptor; Au gratin; Incalzire jos; Coacere paine; Gatire conventionala / traditionala; Dezghetare; Dospire; Uscare; Alimente congelate; Complet abur; Grill; Umiditate ridicata; Umiditate scazuta; Umiditate medie; Mentinere la cald; Coacere umeda cu ventilatie; Setare pizza; Incalzire platou; Conservare alimente; Gatire inceata; Gatire sous vide; Regenerare cu abur; Steamify; Gatire cu ventilatie; Grill turbo; Functie iaurt; Functie pentru siguranta copii; Functie de prelungire a timpului", "Touch control", true, 3500f, 230f, 55f, 7.299f, 40.5f, "59.5 x 56.7 x 59.4", "negru", 5, 19, 12, 24);
        c7 = new Cuptor("Cuptor incorporabil cu gaz ", "BEKO", "BIG12100X", "fara autocuratare", 66, "A", "standard", 5, "Siguranta flacara la cuptor, Aprindere integrata, Grill, Recycled Net", "Mecanic", true, 0.0f, 0.0f, 0.0f, 1.599f, 31.9f, "59.4 x 56.7 x 59.5", "inox", 4.65f, 3, 24, 24);
        c8 = new Cuptor("Cuptor incorporabil cu gaz", "ELECTROLUX", "EOG2102AOK", "catalitica", 68, "A+", "standard", 4, "Incalzire jos, Dezghetare, Grill, Grill cu rotisor, Semnal sonor, Avertizare sfarsit de program, Iluminare, Aprindere electrica, Termocuplu pentru siguranta cuptor", "Mecanic", true, 1770f, 230f, 55f, 2.231f, 31.1f, "59.4 x 56.9 x 59.4", "negru", 5, 2, 24, 2);
        c9 = new Cuptor("Cuptor incorporabil electric", "ELECTROLUX", "AKZ9 6230 NB", "catalitica", 73, "A+", "amortizata", 16, "Al 6-lea simt cu retete pre-setate; Ventilator Turbo; Iluminare; Preincalzire rapida; Coacere conventionala; Decongelare; Pre-incalzire rapida; Pizza/Paine; Maxi cooking; Ready2Cook; Cook3; Grill; Turbo grill; Aer fortat; Functie Turbo Grill; Coacere Maxi; Functie Produse de patiserie; Retete preferate", "Digital", true, 3650f, 230f, 55f, 1.826f, 33f, "60 x 54 x 60", "negru", 4.67f, 48, 24, 24);
        c10 = new Cuptor("Cuptor incorporabil electric", "GORENJE", "BO6737E02XK", "hidrolitica", 77, "A", "standard", 13, "Forma HomeMade; Racire DC+; SuperSize; PizzaFunction; StepBake; GentleBake; FastPreheat; AirFry; FrozenBake; Gratin", "IconLed", true, 3500f, 230f, 55f, 1.599f, 31f, "62 x 67.5 x 66", "inox", 4.9f, 21, 12, 24);
        c11 = new Cuptor("Cuptor incorporabil electric", "ELECTROLUX", "EOE7P31X", "pirolitica", 72, "A+", "amortizata", 9, "Retete integrate; Lumina halogen cuptor; Indicator caldura reziduala; Incalzire jos; Gatire conventionala / traditionala; Dezghetare; Gril rapid; Grill; Mentinere la cald; Coacere umeda cu ventilatie; Setare pizza; Gatire inceata; Gatire cu ventilatie; Grill turbo", "LCD / Touch control", true, 3480f, 230f, 55f, 3.033f, 32.3f, "59.6 x 56.9 x 59.4", "negru", 4.87f, 153, 12, 24);
        c12 = new Cuptor("Cuptor incorporabil electric", "WHIRLPOOL", "AKZM 8660 IX", "pirolitica", 73, "A+", "amortizata", 16, "Tehnologia Al 6-lea Simt; Sistem de curataree piroliza; Coacere conventionala; Decongelare; Pre-incalzire rapida; Pizza/Paine; Maxi cooking; Ready2Cook; Grill; Turbo grill; Aer fortat; Ventilator Turbo; Iluminare; Timer programabil", "Digital", true, 3650f, 230f, 55f, 1.649f, 35.5f, "59.5 x 56.4 x 59.5", "inox", 4.83f, 78, 24, 24);
        c13 = new Cuptor("Cuptor incorporabil electric", "CANDY ", "FCS100N/E", "Fara autocuratare", 70, "A", "Standard", 4, "Grill, Dezghetare rapida", "Mecanic", true, 1700f, 230f, 55f, 600f, 23f, "59.5 x 56.8 x 59.5", "negru", 4.58f, 19, 12, 24);
        c14 = new Cuptor("Cuptor incorporabil electric", "GORENJE", "BOS6737E13XE", "Hidrolitica", 77, "A+", "Amortizata", 13, "Forma HomeMade; Racire DC+; SuperSize; PizzaFunction; StepBake; GentleBake; FastPreheat; AirFry; FrozenBake; Gratin; SteamAssist", "IconLed", true, 3500f, 230f, 55f, 1.639f, 30f, "62 x 67.5 x 66", "inox", 5, 15, 12, 24);
        c15 = new Cuptor("Cuptor incorporabil electric", "BOSCH", "HBA5570B0", "EcoClean", 71, "A", "Standard", 7, "EcoClean Direct; CoolDoor; Sistem de protectie impotriva accesului copiilor; Indicator de caldura reziduala; Iluminare interioara cu halogen; Usa cu deschidere rabatabila; Suport telescopic cu amplasare independenta pe nivelul dorit; AutoPilot - 10 programe automate de gatire; Convectie aer 3D Plus; Incalzire superioara / inferioara; Grill cu convectie aer; Grill - suprafata mare; Pizza; Incalzire inferioara; Convectie - nivel delicat; Functie Stop", "LCD / Electronic", true, 3400f, 230f, 55f, 2.799f, 34.1f, "59.4 x 54.8 x 59.5", "negru", 4.64f, 14, 12, 24);
        Cuptor[] vectCuptoare = {c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15};

        Cuptor cuptor;
        int numarAparitii = 1;
        for (Cuptor vectCuptoare1 : vectCuptoare) {
            if (verificaConditiiFiltrareCuptor(vectCuptoare1)) {
                jTextArea5.append("\n\n" + numarAparitii + "." + vectCuptoare1);
                numarAparitii++;
            }
        }
        if (!jc1.isSelected() && !jc2.isSelected() && !jc3.isSelected() && !jc4.isSelected() && !jc5.isSelected() && !jc6.isSelected() && !jc7.isSelected()) {
            JOptionPane.showMessageDialog(null, "Nu ați ales modalitatea de filtrare", "Eroare", JOptionPane.WARNING_MESSAGE);
            jTextArea5.setText(null);
        }
        if (jTextArea5.getText().trim().length() == 0 && (jc1.isSelected() || jc2.isSelected() || jc3.isSelected() || jc4.isSelected() || jc5.isSelected() || jc6.isSelected() || jc7.isSelected())) {
            JOptionPane.showMessageDialog(null, "Nu exista produse", "Eroare", JOptionPane.NO_OPTION);
        }
    }//GEN-LAST:event_btnAragaz6ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        jTextArea5.setText(null);
        Cuptor c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15;
        c1 = new Cuptor("Cuptor incorporabil electric", "GORENJE", "BPS6737E14X", "pirolitica", 73, "A+", "amortizata", 13, "Forma HomeMade; Racire DC+; SuperSize; PizzaFunction; StepBake; GentleBake; FastPreheat; AirFry; FrozenBake; Gratin; SteamAssist", "IconLed", true, 3500f, 220f, 50f, 1.172f, 39.5f, "59.5 x 56.4 x 59.5", "alb", 5f, 3, 24, 24);
        c2 = new Cuptor("Cuptor incorporabil electric ", "BEKO ", "BBIS13300XMSE", "catalitica", 72, "A+", "amortizata", 9, "Iluminare interioara; Inchidere SoftClose; AEROperfect; Autocurataree SteamShine; Functii gatire: 3D Cooking; Pastrare la cald; Gatire conventionala; Grill; Dezghetare; Incalzire inferioara; Incalzire ventilata Eco; Incalzire ventilata", "LED Touch Control + Butoane", true, 0.0f, 220f, 50f, 1.098f, 31.3f, "59.4 x 56.7 x 59.5", "negru", 4.74f, 19, 12, 24);
        c3 = new Cuptor("Cuptor incorporabil cu gaz", "ELECTROLUX", "EOG2102AOX", "catalitica", 68, "A+", "standard", 7, "Inox antiamprente; curataree catalitica; Semnal sonor; Avertizare sfarsit de program; Cuptor cu rotisor; Incalzire jos; Dezghetare; Gril; Gril cu rotisor; Gatire usoara (light)", "mecanic", false, 1770f, 220f, 50f, 1.699f, 30.9f, "59.4 x 56.9 x 59.4", "inox", 4.68f, 72, 12, 24);
        c4 = new Cuptor("Cuptor incorporabil electric", "WHIRLPOOL", " AKZM 8480 S", "pirolitica", 73, "A+", "amortizata", 0, "Tehnologia Al 6-lea Simt; curataree Piroliza; Inchidere amortizata a usii; Ready2Cook; Gatire pe 3 niveluri; Rafturi glisante; Ventilator turbo; Turbo Grill; Coacere Maxi; Iluminare interioara", "LED / Mecanic + Electronic", false, 3650f, 220f, 55f, 1.999f, 39.5f, "59.5 x 56.4 x 59.5", "argintiu", 4.65f, 82, 24, 24);
        c5 = new Cuptor("Cuptor incorporabil electric", "BEKO", "BBIM13300ZGCSE", "autocuratare SteamShine", 72, "A+", "amortizata", 9, "Inchidere SoftClose; Iluminare interioara cu halogen; AEROperfect; Autocurataree Steamshine; Functii gatire: Gatire 3D; Gatire conventionala; Gatire cu ventilare; Grill; Low grill cu ventilare; Dezghetare; Incalzire inferioara; Incalzire ventilata", "LED Touch Control + Mecanic", true, 0.0f, 220f, 50f, 1.499f, 34.9f, "59.4 x 56.7 x 59.5", "gri inchis", 5, 16, 12, 24);
        c6 = new Cuptor("Cuptor incorporabil electric", "ELECTROLUX", "EOA9S31CX", "fara autocuratare", 70, "A++", "standard", 0, "	Indicator caldura reziduala; Cuptor cu afisaj in mai multe limbi; Lumina halogen cuptor; Au gratin; Incalzire jos; Coacere paine; Gatire conventionala / traditionala; Dezghetare; Dospire; Uscare; Alimente congelate; Complet abur; Grill; Umiditate ridicata; Umiditate scazuta; Umiditate medie; Mentinere la cald; Coacere umeda cu ventilatie; Setare pizza; Incalzire platou; Conservare alimente; Gatire inceata; Gatire sous vide; Regenerare cu abur; Steamify; Gatire cu ventilatie; Grill turbo; Functie iaurt; Functie pentru siguranta copii; Functie de prelungire a timpului", "Touch control", true, 3500f, 230f, 55f, 7.299f, 40.5f, "59.5 x 56.7 x 59.4", "negru", 5, 19, 12, 24);
        c7 = new Cuptor("Cuptor incorporabil cu gaz ", "BEKO", "BIG12100X", "fara autocuratare", 66, "A", "standard", 5, "Siguranta flacara la cuptor, Aprindere integrata, Grill, Recycled Net", "Mecanic", true, 0.0f, 0.0f, 0.0f, 1.599f, 31.9f, "59.4 x 56.7 x 59.5", "inox", 4.65f, 3, 24, 24);
        c8 = new Cuptor("Cuptor incorporabil cu gaz", "ELECTROLUX", "EOG2102AOK", "catalitica", 68, "A+", "standard", 4, "Incalzire jos, Dezghetare, Grill, Grill cu rotisor, Semnal sonor, Avertizare sfarsit de program, Iluminare, Aprindere electrica, Termocuplu pentru siguranta cuptor", "Mecanic", true, 1770f, 230f, 55f, 2.231f, 31.1f, "59.4 x 56.9 x 59.4", "negru", 5, 2, 24, 2);
        c9 = new Cuptor("Cuptor incorporabil electric", "ELECTROLUX", "AKZ9 6230 NB", "catalitica", 73, "A+", "amortizata", 16, "Al 6-lea simt cu retete pre-setate; Ventilator Turbo; Iluminare; Preincalzire rapida; Coacere conventionala; Decongelare; Pre-incalzire rapida; Pizza/Paine; Maxi cooking; Ready2Cook; Cook3; Grill; Turbo grill; Aer fortat; Functie Turbo Grill; Coacere Maxi; Functie Produse de patiserie; Retete preferate", "Digital", true, 3650f, 230f, 55f, 1.826f, 33f, "60 x 54 x 60", "negru", 4.67f, 48, 24, 24);
        c10 = new Cuptor("Cuptor incorporabil electric", "GORENJE", "BO6737E02XK", "hidrolitica", 77, "A", "standard", 13, "Forma HomeMade; Racire DC+; SuperSize; PizzaFunction; StepBake; GentleBake; FastPreheat; AirFry; FrozenBake; Gratin", "IconLed", true, 3500f, 230f, 55f, 1.599f, 31f, "62 x 67.5 x 66", "inox", 4.9f, 21, 12, 24);
        c11 = new Cuptor("Cuptor incorporabil electric", "ELECTROLUX", "EOE7P31X", "pirolitica", 72, "A+", "amortizata", 9, "Retete integrate; Lumina halogen cuptor; Indicator caldura reziduala; Incalzire jos; Gatire conventionala / traditionala; Dezghetare; Gril rapid; Grill; Mentinere la cald; Coacere umeda cu ventilatie; Setare pizza; Gatire inceata; Gatire cu ventilatie; Grill turbo", "LCD / Touch control", true, 3480f, 230f, 55f, 3.033f, 32.3f, "59.6 x 56.9 x 59.4", "negru", 4.87f, 153, 12, 24);
        c12 = new Cuptor("Cuptor incorporabil electric", "WHIRLPOOL", "AKZM 8660 IX", "pirolitica", 73, "A+", "amortizata", 16, "Tehnologia Al 6-lea Simt; Sistem de curataree piroliza; Coacere conventionala; Decongelare; Pre-incalzire rapida; Pizza/Paine; Maxi cooking; Ready2Cook; Grill; Turbo grill; Aer fortat; Ventilator Turbo; Iluminare; Timer programabil", "Digital", true, 3650f, 230f, 55f, 1.649f, 35.5f, "59.5 x 56.4 x 59.5", "inox", 4.83f, 78, 24, 24);
        c13 = new Cuptor("Cuptor incorporabil electric", "CANDY ", "FCS100N/E", "Fara autocuratare", 70, "A", "Standard", 4, "Grill, Dezghetare rapida", "Mecanic", true, 1700f, 230f, 55f, 600f, 23f, "59.5 x 56.8 x 59.5", "negru", 4.58f, 19, 12, 24);
        c14 = new Cuptor("Cuptor incorporabil electric", "GORENJE", "BOS6737E13XE", "Hidrolitica", 77, "A+", "Amortizata", 13, "Forma HomeMade; Racire DC+; SuperSize; PizzaFunction; StepBake; GentleBake; FastPreheat; AirFry; FrozenBake; Gratin; SteamAssist", "IconLed", true, 3500f, 230f, 55f, 1.639f, 30f, "62 x 67.5 x 66", "inox", 5, 15, 12, 24);
        c15 = new Cuptor("Cuptor incorporabil electric", "BOSCH", "HBA5570B0", "EcoClean", 71, "A", "Standard", 7, "EcoClean Direct; CoolDoor; Sistem de protectie impotriva accesului copiilor; Indicator de caldura reziduala; Iluminare interioara cu halogen; Usa cu deschidere rabatabila; Suport telescopic cu amplasare independenta pe nivelul dorit; AutoPilot - 10 programe automate de gatire; Convectie aer 3D Plus; Incalzire superioara / inferioara; Grill cu convectie aer; Grill - suprafata mare; Pizza; Incalzire inferioara; Convectie - nivel delicat; Functie Stop", "LCD / Electronic", true, 3400f, 230f, 55f, 2.799f, 34.1f, "59.4 x 54.8 x 59.5", "negru", 4.64f, 14, 12, 24);
        Cuptor[] vectCuptoare = {c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15};

        Cuptor cuptor;
        int numarAparitii = 1;
        for (Cuptor vectCuptoare1 : vectCuptoare) {
            if (verificaConditiiFiltrareCuptor(vectCuptoare1)) {
                jTextArea5.append("\n\n" + numarAparitii + "." + vectCuptoare1);
                numarAparitii++;
            }
        }
        if (!jc1.isSelected() && !jc2.isSelected() && !jc3.isSelected() && !jc4.isSelected() && !jc5.isSelected() && !jc6.isSelected() && !jc7.isSelected()) {
            JOptionPane.showMessageDialog(null, "Nu ați ales modalitatea de filtrare", "Eroare", JOptionPane.WARNING_MESSAGE);
            jTextArea5.setText(null);
        }
        if (jTextArea5.getText().trim().length() == 0 && (jc1.isSelected() || jc2.isSelected() || jc3.isSelected() || jc4.isSelected() || jc5.isSelected() || jc6.isSelected() || jc7.isSelected())) {
            JOptionPane.showMessageDialog(null, "Nu exista produse", "Eroare", JOptionPane.NO_OPTION);
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jRadioButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton8ActionPerformed

    private void jRadioButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton10ActionPerformed

    private void jRadioButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton21ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton21ActionPerformed

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox4.isSelected() && jCheckBox5.isSelected()) {
            jCheckBox5.setSelected(false);
        }
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void jc6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jc6ActionPerformed
        // TODO add your handling code here:
        if (jc6.isSelected() && jc7.isSelected()) {
            jc7.setSelected(false);
        }
    }//GEN-LAST:event_jc6ActionPerformed

    private void jc7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jc7ActionPerformed
        // TODO add your handling code here:
        if (jc6.isSelected() && jc7.isSelected()) {
            jc6.setSelected(false);
        }
    }//GEN-LAST:event_jc7ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        switch (String.valueOf(jComboBox1.getSelectedItem())) {
            case "---":
                jLabel8.setText("- - -");
                jTextField7.setVisible(false);
                jLabel9.setText("- - -");
                jTextField8.setVisible(false);
                jLabel10.setText("- - -");
                jTextField9.setVisible(false);
                jLabel11.setText("- - -");
                jTextField10.setVisible(false);
                jLabel12.setText("- - -");
                jTextField11.setVisible(false);
                jLabel13.setText("- - -");
                jTextField12.setVisible(false);
                jLabel14.setText("- - -");
                jTextField13.setVisible(false);
                jLabel15.setText("- - -");
                jTextField14.setVisible(false);
                jLabel16.setText("- - -");
                jTextField15.setVisible(false);
                jLabel17.setText("- - -");
                jTextField16.setVisible(false);
                jLabel18.setText("- - -");
                jTextField17.setVisible(false);
                jLabel19.setText("- - -");
                jTextField18.setVisible(false);
                jLabel20.setText("- - -");
                jTextField19.setVisible(false);
                jLabel21.setText("- - -");
                jTextField20.setVisible(false);
                jLabel22.setText("- - -");
                jTextField21.setVisible(false);
                jLabel23.setText("- - -");
                jTextField22.setVisible(false);
                jLabel24.setText("- - -");
                jTextField23.setVisible(false);
                jLabel25.setText("- - -");
                jTextField24.setVisible(false);
                jLabel26.setText("- - -");
                jTextField25.setVisible(false);
                jLabel27.setText("- - -");
                jTextField26.setVisible(false);
                jLabel28.setText("- - -");
                jTextField27.setVisible(false);
                jLabel29.setText("- - -");
                jTextField28.setVisible(false);
                jLabel30.setText("- - -");
                jTextField29.setVisible(false);
                jLabel31.setText("- - -");
                jTextField30.setVisible(false);
                jLabel32.setText("- - -");
                jTextField31.setVisible(false);
                jLabel33.setText("- - -");
                jTextField32.setVisible(false);
                jLabel34.setText("- - -");
                jTextField33.setVisible(false);
                break;

            case "Aragaz":
                Ascunde();
                jTextAreaFisiere.setText("");

                jLabel8.setVisible(true);
                jLabel8.setText("Brand:");
                jTextField7.setText("");
                jTextField7.setVisible(true);

                jLabel9.setVisible(true);
                jLabel9.setText("Tip:");
                jTextField8.setText("");
                jTextField8.setVisible(true);

                jLabel10.setVisible(true);
                jLabel10.setText("Clasa eficienta energetica:");
                jTextField9.setText("");
                jTextField9.setVisible(true);

                jLabel11.setVisible(true);
                jLabel11.setText("Nume model:");
                jTextField10.setText("");
                jTextField10.setVisible(true);

                jLabel12.setVisible(true);
                jLabel12.setText("Culoare:");
                jTextField11.setText("");
                jTextField11.setVisible(true);

                jLabel13.setVisible(true);
                jLabel13.setText("Functii:");
                jTextField12.setText("");
                jTextField12.setVisible(true);

                jLabel14.setVisible(true);
                jLabel14.setText("Capacitate:");
                jTextField13.setText("");
                jTextField13.setVisible(true);

                jLabel15.setVisible(true);
                jLabel15.setText("Recenzii total:");
                jTextField14.setText("");
                jTextField14.setVisible(true);

                jLabel16.setVisible(true);
                jLabel16.setText("Recenzii:");
                jTextField15.setText("");
                jTextField15.setVisible(true);

                jLabel17.setVisible(true);
                jLabel17.setText("Pret:");
                jTextField16.setText("");
                jTextField16.setVisible(true);

                jLabel18.setVisible(true);
                jLabel18.setText("Dimensiune:");
                jTextField17.setText("");
                jTextField17.setVisible(true);

                jLabel19.setVisible(true);
                jLabel19.setText("Greutate:");
                jTextField18.setText("");
                jTextField18.setVisible(true);

                jLabel20.setVisible(true);
                jLabel20.setText("Garantie persoana fizica:");
                jTextField19.setText("");
                jTextField19.setVisible(true);

                jLabel21.setVisible(true);
                jLabel21.setText("Garantie persoana juridica:");
                jTextField20.setText("");
                jTextField20.setVisible(true);

                jLabel22.setVisible(true);
                jLabel22.setText("Numar arzatoare:");
                jTextField21.setText("");
                jTextField21.setVisible(true);

                jLabel23.setVisible(true);
                jLabel23.setText("Tip alimentare:");
                jTextField22.setText("");
                jTextField22.setVisible(true);

                jLabel24.setVisible(true);
                jLabel24.setText("Rotisor:");
                jTextField23.setText("");
                jTextField23.setVisible(true);

                jLabel25.setVisible(true);
                jLabel25.setText("Grill:");
                jTextField24.setText("");
                jTextField24.setVisible(true);

                jLabel26.setVisible(true);
                jLabel26.setText("Tip plita:");
                jTextField25.setText("");
                jTextField25.setVisible(true);

                jLabel27.setVisible(true);
                jLabel27.setText("Tip cuptor:");
                jTextField26.setText("");
                jTextField26.setVisible(true);

                jLabel28.setVisible(true);
                jLabel28.setText("Autocuratare:");
                jTextField27.setText("");
                jTextField27.setVisible(true);

                jLabel29.setVisible(true);
                jLabel29.setText("Putere:");
                jTextField28.setText("");
                jTextField28.setVisible(true);

                jLabel30.setVisible(true);
                jLabel30.setText("Tensiune:");
                jTextField29.setText("");
                jTextField29.setVisible(true);

                break;

            case "Cuptor":
                Ascunde();
                jTextAreaFisiere.setText("");

                jLabel8.setVisible(true);
                jLabel8.setText("Brand:");
                jTextField7.setText("");
                jTextField7.setVisible(true);

                jLabel9.setVisible(true);
                jLabel9.setText("Tip:");
                jTextField8.setText("");
                jTextField8.setVisible(true);

                jLabel10.setVisible(true);
                jLabel10.setText("Clasa eficienta energetica:");
                jTextField9.setText("");
                jTextField9.setVisible(true);

                jLabel11.setVisible(true);
                jLabel11.setText("Nume model:");
                jTextField10.setText("");
                jTextField10.setVisible(true);

                jLabel12.setVisible(true);
                jLabel12.setText("Culoare:");
                jTextField11.setText("");
                jTextField11.setVisible(true);

                jLabel13.setVisible(true);
                jLabel13.setText("Functii:");
                jTextField12.setText("");
                jTextField12.setVisible(true);

                jLabel14.setVisible(true);
                jLabel14.setText("Capacitate:");
                jTextField13.setText("");
                jTextField13.setVisible(true);

                jLabel15.setVisible(true);
                jLabel15.setText("Recenzii total:");
                jTextField14.setText("");
                jTextField14.setVisible(true);

                jLabel16.setVisible(true);
                jLabel16.setText("Recenzii:");
                jTextField15.setText("");
                jTextField15.setVisible(true);

                jLabel17.setVisible(true);
                jLabel17.setText("Pret:");
                jTextField16.setText("");
                jTextField16.setVisible(true);

                jLabel18.setVisible(true);
                jLabel18.setText("Dimensiune:");
                jTextField17.setText("");
                jTextField17.setVisible(true);

                jLabel19.setVisible(true);
                jLabel19.setText("Greutate:");
                jTextField18.setText("");
                jTextField18.setVisible(true);

                jLabel20.setVisible(true);
                jLabel20.setText("Garantie persoana fizica:");
                jTextField19.setText("");
                jTextField19.setVisible(true);

                jLabel21.setVisible(true);
                jLabel21.setText("Garantie persoana juridica:");
                jTextField20.setText("");
                jTextField20.setVisible(true);

                jLabel22.setVisible(true);
                jLabel22.setText("Tip curatare:");
                jTextField21.setText("");
                jTextField21.setVisible(true);

                jLabel23.setVisible(true);
                jLabel23.setText("Tip inchidere usa:");
                jTextField22.setText("");
                jTextField22.setVisible(true);

                jLabel24.setVisible(true);
                jLabel24.setText("Nr functii:");
                jTextField23.setText("");
                jTextField23.setVisible(true);

                jLabel25.setVisible(true);
                jLabel25.setText("Afisaj panou comanda:");
                jTextField24.setText("");
                jTextField24.setVisible(true);

                jLabel26.setVisible(true);
                jLabel26.setText("Timer:");
                jTextField25.setText("");
                jTextField25.setVisible(true);

                jLabel27.setVisible(true);
                jLabel27.setText("Putere:");
                jTextField26.setText("");
                jTextField26.setVisible(true);

                jLabel28.setVisible(true);
                jLabel28.setText("Tensiune:");
                jTextField27.setText("");
                jTextField27.setVisible(true);

                jLabel29.setVisible(true);
                jLabel29.setText("Frecventa:");
                jTextField28.setText("");
                jTextField28.setVisible(true);

                break;

            case "Masina de spalat rufe":
                Ascunde();
                jTextAreaFisiere.setText("");

                jLabel8.setVisible(true);
                jLabel8.setText("Brand:");
                jTextField7.setText("");
                jTextField7.setVisible(true);

                jLabel9.setVisible(true);
                jLabel9.setText("Tip:");
                jTextField8.setText("");
                jTextField8.setVisible(true);

                jLabel10.setVisible(true);
                jLabel10.setText("Clasa eficienta energetica:");
                jTextField9.setText("");
                jTextField9.setVisible(true);

                jLabel11.setVisible(true);
                jLabel11.setText("Nume model:");
                jTextField10.setText("");
                jTextField10.setVisible(true);

                jLabel12.setVisible(true);
                jLabel12.setText("Culoare:");
                jTextField11.setText("");
                jTextField11.setVisible(true);

                jLabel13.setVisible(true);
                jLabel13.setText("Functii:");
                jTextField12.setText("");
                jTextField12.setVisible(true);

                jLabel14.setVisible(true);
                jLabel14.setText("Capacitate:");
                jTextField13.setText("");
                jTextField13.setVisible(true);

                jLabel15.setVisible(true);
                jLabel15.setText("Recenzii total:");
                jTextField14.setText("");
                jTextField14.setVisible(true);

                jLabel16.setVisible(true);
                jLabel16.setText("Recenzii:");
                jTextField15.setText("");
                jTextField15.setVisible(true);

                jLabel17.setVisible(true);
                jLabel17.setText("Pret:");
                jTextField16.setText("");
                jTextField16.setVisible(true);

                jLabel18.setVisible(true);
                jLabel18.setText("Dimensiune:");
                jTextField17.setText("");
                jTextField17.setVisible(true);

                jLabel19.setVisible(true);
                jLabel19.setText("Greutate:");
                jTextField18.setText("");
                jTextField18.setVisible(true);

                jLabel20.setVisible(true);
                jLabel20.setText("Garantie persoana fizica:");
                jTextField19.setText("");
                jTextField19.setVisible(true);

                jLabel21.setVisible(true);
                jLabel21.setText("Garantie persoana juridica:");
                jTextField20.setText("");
                jTextField20.setVisible(true);

                jLabel22.setVisible(true);
                jLabel22.setText("Viteza centrifugare:");
                jTextField21.setText("");
                jTextField21.setVisible(true);

                jLabel23.setVisible(true);
                jLabel23.setText("Afisaj:");
                jTextField22.setText("");
                jTextField22.setVisible(true);

                jLabel24.setVisible(true);
                jLabel24.setText("Clasa eficienta spalare:");
                jTextField23.setText("");
                jTextField23.setVisible(true);

                jLabel25.setVisible(true);
                jLabel25.setText("Clasa eficienta stoarcere:");
                jTextField24.setText("");
                jTextField24.setVisible(true);

                jLabel26.setVisible(true);
                jLabel26.setText("Clasa emisie zgomot:");
                jTextField25.setText("");
                jTextField25.setVisible(true);

                jLabel27.setVisible(true);
                jLabel27.setText("Numar programe:");
                jTextField26.setText("");
                jTextField26.setVisible(true);

                jLabel28.setVisible(true);
                jLabel28.setText("Program rapid:");
                jTextField27.setText("");
                jTextField27.setVisible(true);

                jLabel29.setVisible(true);
                jLabel29.setText("Programe spalare:");
                jTextField28.setText("");
                jTextField28.setVisible(true);

                jLabel30.setVisible(true);
                jLabel30.setText("Functii prespalare:");
                jTextField29.setText("");
                jTextField29.setVisible(true);

                jLabel31.setVisible(true);
                jLabel31.setText("Consum energie:");
                jTextField30.setText("");
                jTextField30.setVisible(true);

                jLabel32.setVisible(true);
                jLabel32.setText("Consum apa:");
                jTextField31.setText("");
                jTextField31.setVisible(true);

                jLabel33.setVisible(true);
                jLabel33.setText("Durata program Eco:");
                jTextField32.setText("");
                jTextField32.setVisible(true);

                jLabel34.setVisible(true);
                jLabel34.setText("Putere:");
                jTextField33.setText("");
                jTextField33.setVisible(true);

                break;

            case "Masina de spalat vase":
                Ascunde();
                jTextAreaFisiere.setText("");

                jLabel8.setVisible(true);
                jLabel8.setText("Brand:");
                jTextField7.setText("");
                jTextField7.setVisible(true);

                jLabel9.setVisible(true);
                jLabel9.setText("Tip:");
                jTextField8.setText("");
                jTextField8.setVisible(true);

                jLabel10.setVisible(true);
                jLabel10.setText("Clasa eficienta energetica:");
                jTextField9.setText("");
                jTextField9.setVisible(true);

                jLabel11.setVisible(true);
                jLabel11.setText("Nume model:");
                jTextField10.setText("");
                jTextField10.setVisible(true);

                jLabel12.setVisible(true);
                jLabel12.setText("Culoare:");
                jTextField11.setText("");
                jTextField11.setVisible(true);

                jLabel13.setVisible(true);
                jLabel13.setText("Functii:");
                jTextField12.setText("");
                jTextField12.setVisible(true);

                jLabel14.setVisible(true);
                jLabel14.setText("Capacitate:");
                jTextField13.setText("");
                jTextField13.setVisible(true);

                jLabel15.setVisible(true);
                jLabel15.setText("Recenzii total:");
                jTextField14.setText("");
                jTextField14.setVisible(true);

                jLabel16.setVisible(true);
                jLabel16.setText("Recenzii:");
                jTextField15.setText("");
                jTextField15.setVisible(true);

                jLabel17.setVisible(true);
                jLabel17.setText("Pret:");
                jTextField16.setText("");
                jTextField16.setVisible(true);

                jLabel18.setVisible(true);
                jLabel18.setText("Dimensiune:");
                jTextField17.setText("");
                jTextField17.setVisible(true);

                jLabel19.setVisible(true);
                jLabel19.setText("Greutate:");
                jTextField18.setText("");
                jTextField18.setVisible(true);

                jLabel20.setVisible(true);
                jLabel20.setText("Garantie persoana fizica:");
                jTextField19.setText("");
                jTextField19.setVisible(true);

                jLabel21.setVisible(true);
                jLabel21.setText("Garantie persoana juridica:");
                jTextField20.setText("");
                jTextField20.setVisible(true);

                jLabel22.setVisible(true);
                jLabel22.setText("Numar programe:");
                jTextField21.setText("");
                jTextField21.setVisible(true);

                jLabel23.setVisible(true);
                jLabel23.setText("Afisaj:");
                jTextField22.setText("");
                jTextField22.setVisible(true);

                jLabel24.setVisible(true);
                jLabel24.setText("Numar cosuri:");
                jTextField23.setText("");
                jTextField23.setVisible(true);

                jLabel25.setVisible(true);
                jLabel25.setText("Programtor:");
                jTextField24.setText("");
                jTextField24.setVisible(true);

                jLabel26.setVisible(true);
                jLabel26.setText("Material cuva:");
                jTextField25.setText("");
                jTextField25.setVisible(true);

                jLabel27.setVisible(true);
                jLabel27.setText("Programe:");
                jTextField26.setText("");
                jTextField26.setVisible(true);

                jLabel28.setVisible(true);
                jLabel28.setText("Clasa eficienta spalare:");
                jTextField27.setText("");
                jTextField27.setVisible(true);

                jLabel29.setVisible(true);
                jLabel29.setText("Clasa eficienta uscare:");
                jTextField28.setText("");
                jTextField28.setVisible(true);

                jLabel30.setVisible(true);
                jLabel30.setText("Clasa emisie zgomot:");
                jTextField29.setText("");
                jTextField29.setVisible(true);

                jLabel31.setVisible(true);
                jLabel31.setText("Consum energetic:");
                jTextField30.setText("");
                jTextField30.setVisible(true);

                jLabel32.setVisible(true);
                jLabel32.setText("Consum apa:");
                jTextField31.setText("");
                jTextField31.setVisible(true);

                jLabel33.setVisible(true);
                jLabel33.setText("Durata program Eco:");
                jTextField32.setText("");
                jTextField32.setVisible(true);

                jLabel34.setVisible(true);
                jLabel34.setText("Putere:");
                jTextField33.setText("");
                jTextField33.setVisible(true);

                break;

            case "Frigider":
                Ascunde();
                jTextAreaFisiere.setText("");

                jLabel8.setVisible(true);
                jLabel8.setText("Brand:");
                jTextField7.setText("");
                jTextField7.setVisible(true);

                jLabel9.setVisible(true);
                jLabel9.setText("Tip:");
                jTextField8.setText("");
                jTextField8.setVisible(true);

                jLabel10.setVisible(true);
                jLabel10.setText("Clasa eficienta energetica:");
                jTextField9.setText("");
                jTextField9.setVisible(true);

                jLabel11.setVisible(true);
                jLabel11.setText("Nume model:");
                jTextField10.setText("");
                jTextField10.setVisible(true);

                jLabel12.setVisible(true);
                jLabel12.setText("Culoare:");
                jTextField11.setText("");
                jTextField11.setVisible(true);

                jLabel13.setVisible(true);
                jLabel13.setText("Functii:");
                jTextField12.setText("");
                jTextField12.setVisible(true);

                jLabel14.setVisible(true);
                jLabel14.setText("Capacitate:");
                jTextField13.setText("");
                jTextField13.setVisible(true);

                jLabel15.setVisible(true);
                jLabel15.setText("Recenzii total:");
                jTextField14.setText("");
                jTextField14.setVisible(true);

                jLabel16.setVisible(true);
                jLabel16.setText("Recenzii:");
                jTextField15.setText("");
                jTextField15.setVisible(true);

                jLabel17.setVisible(true);
                jLabel17.setText("Pret:");
                jTextField16.setText("");
                jTextField16.setVisible(true);

                jLabel18.setVisible(true);
                jLabel18.setText("Dimensiune:");
                jTextField17.setText("");
                jTextField17.setVisible(true);

                jLabel19.setVisible(true);
                jLabel19.setText("Greutate:");
                jTextField18.setText("");
                jTextField18.setVisible(true);

                jLabel20.setVisible(true);
                jLabel20.setText("Garantie persoana fizica:");
                jTextField19.setText("");
                jTextField19.setVisible(true);

                jLabel21.setVisible(true);
                jLabel21.setText("Garantie persoana juridica:");
                jTextField20.setText("");
                jTextField20.setVisible(true);

                jLabel22.setVisible(true);
                jLabel22.setText("Freezer:");
                jTextField21.setText("");
                jTextField21.setVisible(true);

                jLabel23.setVisible(true);
                jLabel23.setText("Sistem De Racire:");
                jTextField22.setText("");
                jTextField22.setVisible(true);

                jLabel24.setVisible(true);
                jLabel24.setText("Numar Compresoare:");
                jTextField23.setText("");
                jTextField23.setVisible(true);

                jLabel25.setVisible(true);
                jLabel25.setText("Control Temperatura:");
                jTextField24.setText("");
                jTextField24.setVisible(true);

                jLabel26.setVisible(true);
                jLabel26.setText("Numar Rafturi:");
                jTextField25.setText("");
                jTextField25.setVisible(true);

                jLabel27.setVisible(true);
                jLabel27.setText("Dozator Apa:");
                jTextField26.setText("");
                jTextField26.setVisible(true);

                jLabel28.setVisible(true);
                jLabel28.setText("Cutie Fructe si Legume:");
                jTextField27.setText("");
                jTextField27.setVisible(true);

                jLabel29.setVisible(true);
                jLabel29.setText("Nivel zgomot:");
                jTextField28.setText("");
                jTextField28.setVisible(true);

                break;

            case "Congelator":
                Ascunde();
                jTextAreaFisiere.setText("");
                jLabel8.setVisible(true);
                jLabel8.setText("Brand:");
                jTextField7.setText("");
                jTextField7.setVisible(true);

                jLabel9.setVisible(true);
                jLabel9.setText("Tip:");
                jTextField8.setText("");
                jTextField8.setVisible(true);

                jLabel10.setVisible(true);
                jLabel10.setText("Clasa eficienta energetica:");
                jTextField9.setText("");
                jTextField9.setVisible(true);

                jLabel11.setVisible(true);
                jLabel11.setText("Nume model:");
                jTextField10.setText("");
                jTextField10.setVisible(true);

                jLabel12.setVisible(true);
                jLabel12.setText("Culoare:");
                jTextField11.setText("");
                jTextField11.setVisible(true);

                jLabel13.setVisible(true);
                jLabel13.setText("Functii:");
                jTextField12.setText("");
                jTextField12.setVisible(true);

                jLabel14.setVisible(true);
                jLabel14.setText("Capacitate:");
                jTextField13.setText("");
                jTextField13.setVisible(true);

                jLabel15.setVisible(true);
                jLabel15.setText("Recenzii total:");
                jTextField14.setText("");
                jTextField14.setVisible(true);

                jLabel16.setVisible(true);
                jLabel16.setText("Recenzii:");
                jTextField15.setText("");
                jTextField15.setVisible(true);

                jLabel17.setVisible(true);
                jLabel17.setText("Pret:");
                jTextField16.setText("");
                jTextField16.setVisible(true);

                jLabel18.setVisible(true);
                jLabel18.setText("Dimensiune:");
                jTextField17.setText("");
                jTextField17.setVisible(true);

                jLabel19.setVisible(true);
                jLabel19.setText("Greutate:");
                jTextField18.setText("");
                jTextField18.setVisible(true);

                jLabel20.setVisible(true);
                jLabel20.setText("Garantie persoana fizica:");
                jTextField19.setText("");
                jTextField19.setVisible(true);

                jLabel21.setVisible(true);
                jLabel21.setText("Garantie persoana juridica:");
                jTextField20.setText("");
                jTextField20.setVisible(true);

                jLabel22.setVisible(true);
                jLabel22.setText("Sistem De Racire:");
                jTextField21.setText("");
                jTextField21.setVisible(true);

                jLabel23.setVisible(true);
                jLabel23.setText("Numar Compresoare:");
                jTextField22.setText("");
                jTextField22.setVisible(true);

                jLabel24.setVisible(true);
                jLabel24.setText("Control Temperatura:");
                jTextField23.setText("");
                jTextField23.setVisible(true);

                jLabel25.setVisible(true);
                jLabel25.setText("Numar Rafturi:");
                jTextField24.setText("");
                jTextField24.setVisible(true);

                jLabel26.setVisible(true);
                jLabel26.setText("Dozator Apa:");
                jTextField25.setText("");
                jTextField25.setVisible(true);

                jLabel26.setVisible(true);
                jLabel26.setText("Cutie Fructe si Legume:");
                jTextField25.setText("");
                jTextField25.setVisible(true);

                jLabel27.setVisible(true);
                jLabel27.setText("Nivel Zgomot:");
                jTextField26.setText("");
                jTextField26.setVisible(true);
                break;
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButtonScriereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonScriereActionPerformed
        if (jTextAreaFisiere.getText().isEmpty() != true) {
            jTextAreaFisiere.setText("");
        }

        switch (String.valueOf(jComboBox1.getSelectedItem())) {
            case "Aragaz":
                Aragaz a = new Aragaz();
                SwitchAragaz(a);
                break;
            case "Cuptor":
                Cuptor c = new Cuptor();
                SwitchCuptor(c);
                break;
            case "Masina de spalat rufe":
                MasinaDeSpalatRufe r = new MasinaDeSpalatRufe();
                SwitchMasinaDeSpalatRufe(r);
                break;
            case "Masina de spalat vase":
                MasinaDeSpalatVase v = new MasinaDeSpalatVase();
                SwitchMasinaDeSpalatVase(v);
                break;
            case "Frigider":
                Frigider f = new Frigider();
                SwitchFrigider(f);
                break;
            case "Congelator":
                Congelator cg = new Congelator();
                SwitchCongelator(cg);
                break;
        }
    }//GEN-LAST:event_jButtonScriereActionPerformed

    private void jButtonCitireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCitireActionPerformed
        jTextAreaFisiere.setText("");
        ElectrocasniceGUI ob = new ElectrocasniceGUI();
        switch (String.valueOf(jComboBox1.getSelectedItem())) {
            case "Aragaz":
                ArrayList<Object> objects1 = ob.Citire("Aragaz1.txt");
                for (Object obj : objects1) {
                    Aragaz a = (Aragaz) obj;
                    jTextAreaFisiere.append(a.toString() + "\n");
                }
                break;

            case "Cuptor":
                ArrayList<Object> objects2 = ob.Citire("Cuptor2.txt");
                for (Object obj : objects2) {
                    Cuptor c = (Cuptor) obj;
                    jTextAreaFisiere.append(c.toString() + "\n");
                }
                break;

            case "Masina de spalat rufe":
                ArrayList<Object> objects3 = ob.Citire("MasinaDeSpalatRufe3.txt");
                for (Object obj : objects3) {
                    MasinaDeSpalatRufe r = (MasinaDeSpalatRufe) obj;
                    jTextAreaFisiere.append(r.toString() + "\n");
                }
                break;

            case "Masina de spalat vase":
                ArrayList<Object> objects4 = ob.Citire("MasinaDeSpalatVase4.txt");
                for (Object obj : objects4) {
                    MasinaDeSpalatVase v = (MasinaDeSpalatVase) obj;
                    jTextAreaFisiere.append(v.toString() + "\n");
                }
                break;

            case "Frigider":
                ArrayList<Object> objects5 = ob.Citire("Frigider5.txt");
                for (Object obj : objects5) {
                    Frigider f = (Frigider) obj;
                    jTextAreaFisiere.append(f.toString() + "\n");
                }
                break;

            case "Congelator":
                ArrayList<Object> objects6 = ob.Citire("Congelator6.txt");
                for (Object obj : objects6) {
                    Congelator cg = (Congelator) obj;
                    jTextAreaFisiere.append(cg.toString() + "\n");
                }
                break;
        }
    }//GEN-LAST:event_jButtonCitireActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void button_MasinaDeSpalatRufeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_MasinaDeSpalatRufeActionPerformed
        MasinaDeSpalatRufe r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15;

        r1 = new MasinaDeSpalatRufe("Masina de spalat rufe frontala", "BOSCH", "WAN24167BY", "Child lock, Functie reincarcare, Night Wash, Reminder curatare tambur, Pornire intarziata, Control balans", 8, 1200, "C", 1793.92f, 67.6f, "59.8 x 55 x 84.8", "Alb", "LCD / Touch", 'A', 'B', 15, 15, "Bumbac, Sintetice, Delicate, Super 15'/30', Lana/Spalare manuala, Camasi/Bluze, Sport, Rapid/Mix, Dark wash, Hygiene Plus, Curatare tambur, Night Wash, Centrifugare+Evacuare", "Da", 62, 47, "3:26", 'A', 2300, 4.94f, 16, 12, 24);
        r2 = new MasinaDeSpalatRufe("Masina de spalat rufe frontala", "LG", "F4WV509S2TE", "Pornire intarziata (3-19 h), Child Lock, Doar centrifugare, Start/ Pauza, Alarma eroare, Auto Restart, Semnal sonor pornire/oprire", 9, 1400, "B", 2519.91f, 70, "60 x 56.5 x 85", "Argintiu", "LED/Touch control", 'A', 'B', 14, 59, "Bumbac, Eco 40-60, Mix (Mixed Fabric), Easy Care, Duvet, Tub Clean, Allergy Care, Baby Steam Care, Turbo Wash 59, Sports Wear, Rapid 14', Delicate, Hand / Wool", "Da", 58, 50, "3:48", 'A', 1850, 5, 2, 12, 24);
        r3 = new MasinaDeSpalatRufe("Masina de spalat rufe verticala", "INDESIT", "BTWB7220PEU/N", "Pornire intarziata, Reglare temperatura, Viteza centrifugare, Clatire Intensiva, Optiune energy saver, Calcare usoara", 7, 1200, "E", 1799.90f, 57, "40 x 60 x 90", "Alb", "Digital", 'A', 'C', 15, 15, "Turn & Go, Sintetice, Bumbac, Eco 40-60, Mix 45 min, Articole Sport, 20C, Lana 20, Delicate 30, Colorate 40, Bumbac 30, Sintetice 30, Centrifugare + Evacuare, Clatire + Centrifugare, Eco Bumbac", "Da", 78, 45, "03:25", 'C', 2100, 4.33f, 30, 12, 24);
        r4 = new MasinaDeSpalatRufe("Masina de spalat rufe frontala", "GORENJE", "WNEI74AS", "Protectie la inundatii, Protectie acces copii, Senzor incarcare, Senzor spuma, Senzor nivel apa, Senzor temperatura", 7, 1400, "A", 1948.90f, 65.1f, "60 x 54.5 x 85", "Alb", "LED / Electronic", 'A', 'B', 16, 20, "Bumbac, Program de spalare manual/Lana, Mix/Sintetice, Pets, ExtraHygiene, Haine pentru bebelusi, Daily wash, Program Eco 40-60 C, Rapid 20', PowerWash 59', Program pentru lenjerie, Program pentru uscarea camasilor, SterilTub, Spin/drain, Clatire/Inmuiere", "Da", 45, 45, "3:01", 'B', 1900, 4.6f, 30, 12, 24);
        r5 = new MasinaDeSpalatRufe("Masina de spalat rufe incorporabila", "WHIRLPOOL", "BI WMWG 81484E", "Siguranta copii, Pornire intarziata, Sistem protectie inundatii", 8, 1400, "C", 2349.90f, 66.5f, "59.5 x 54.5 x 81.5", "Alb", "Digital", 'B', 'B', 14, 14, "Mix, Rufe albe, Bumbac, Eco 40-60, Articole sport, Plapumi, 20 C, Centrifugare & evacuare, Clatire & Evacuare, Rapid 30 min, Colours 15, Lana, Delicate, Sintetice, Eco Bumbac", "Da", 63, 48, "03:30", 'A', 1850, 4.64f, 11, 24, 24);
        r6 = new MasinaDeSpalatRufe("Masina de spalat rufe incorporabila", "BEKO", "WITV8712X0W", "DrumClean, Clatire suplimentara, Spalare rapida, Child lock, Sistem automat de reglare al consumului de apa, Sistem control exces apa, Sistem electronic de control al balansului, Afisare timp spalare ramas", 8, 1200, "C", 1462.92f, 71, "60 x 57 x 82", "Alb", "Display / Electronic", 'C', 'B', 15, 15, "Down Wear, Dark Care, Shirts, Sports, Hygiene 20 C, Woollens, Daily Xpress/Xpress Super Short, Mix 40 C, Spalare manuala, Bumbac, Bumbac Eco, Sintetice, Stoarcere si evacuare, Clatire, Lingerie", "Da", 62, 41, "3:38", 'B', 2200, 4, 16, 12, 24);
        r7 = new MasinaDeSpalatRufe("Masina de spalat rufe verticala", "ELECTROLUX", "PerfectCare700 EW7TN3272", "Pete, Clatire suplimentara, Soft Plus, Steam Plus, Start/Pauza", 6, 1200, "B", 2091.31f, 59, "40 x 60 x 89", "Alb", "LCD", 'A', 'B', 14, 14, "Pornit/Oprit, Eco 40-60, Bumbac, Sintetice, Delicate, Abur, Abur pentru casmir, Centrifugare/Evacuare, Clatire, Articole bebelusi, Rapid 14 min, AntiAllergy, Jachete, Denim, Lana/Matase", "Da", 48, 43, "03:15", 'C', 2200, 4.73f, 11, 12, 24);
        r8 = new MasinaDeSpalatRufe("Masina de spalat rufe frontala", "ARCTIC", "APL81223XLAB", "Rapid+, Clatire suplimentara, Antisifonare, Drum Clean cu Extra Steam, Child Lock, Add-In, Amanare pornire, Afisare timp ramas", 8, 1200, "C", 1969.90f, 68, "60 x 55 x 84", "Antracit", "LED", 'C', 'B', 14, 14, "Bumbac, Eco 40-60, Sintetice, Spalare rapida 14', Mixt, Lana, Materiale delicate, Camasi, Geci cu puf, Antialergic+, Anti-pete, Articole iarna, Jeans/ Culori inchise, Clatire, Stoarcere/ Evacuare", "Da", 62, 38, "3:38", 'B', 2200, 5, 5, 12, 24);
        r9 = new MasinaDeSpalatRufe("Masina de spalat rufe frontala", "Samsung", "WW80T4540AX/LE", "Child Lock, Pornire intarziata, Drum Clean, Tambur 2nd Diamond, Prespalare, Rinse+, Smart Check, Sertar StayClean, Steam", 8, 1400, "D", 1899.90f, 68, "60 x 55 x 85", "Inox", "LED / Mecanic", 'C', 'B', 12, 15, "Sintetice, Clatire + Centrifugare, Mixte, Hygiene Steam, Drum Clean, Denim, Colorate, Bumbac, Lenjerii de pat, Rapid 15', Eco 40-60", "Da", 73, 48, "03:38", 'A', 1900, 5, 9, 12, 24);
        r10 = new MasinaDeSpalatRufe("Masina de spalat rufe incorporabila", "BEKO", "WITV8712X0W", "DrumClean, Clatire suplimentara, Spalare rapida, Child lock, Sistem automat de reglare al consumului de apa, Sistem control exces apa, Sistem electronic de control al balansului, Afisare timp spalare ramas", 8, 1400, "C", 1899.90f, 71, "60 x 57 x 82", "Alb", "Display / Electronic", 'C', 'B', 15, 20, "Down Wear, Dark Care, Shirts, Sports, Hygiene 20 C, Woollens, Daily Xpress/Xpress Super Short, Mix 40 C, Spalare manuala, Bumbac, Bumbac Eco, Sintetice, Stoarcere si evacuare, Clatire, Lingerie", "Da", 62, 41, "03:38", 'B', 2200, 4, 16, 12, 24);
        r11 = new MasinaDeSpalatRufe("Masina de spalat rufe verticala", "WHIRLPOOL", "TDLR7220SSEU/N", "Pornire intarziata, Reglare temperatura, Viteza centrifugare, Clatire Intensiva, Soft Opening", 7, 1200, "E", 1999.90f, 57, "40 x 60 x 90", "Alb", "Digital", 'B', 'C', 13, 15, "Mix, Eco 40-60, 20 grade, Rufe colorate, Lana, Centrifugare, Clatire+Centrifugare, Delicate, Igiena, Sintetice, Rapid 30, Bumbac, Eco Bumbac", "Da", 78, 45, "03:25", 'C', 2100, 3.95f, 21, 24, 24);
        r12 = new MasinaDeSpalatRufe("Masina de spalat rufe verticala", "GORENJE", "WNT62112", "Sistem de control al stabilitatii", 6, 1200, "D", 614.35f, 58, "40 x 60 x 90", "Alb", "LED / Mecanic", 'A', 'B', 18, 20, "Bumbac, Sintetice, Rufe delicate si de matase, Lana, Spalare rapida, Spalare Manuala", "Da", 64, 43, "03:15", 'B', 2100, 4.44f, 19, 12, 24);
        r13 = new MasinaDeSpalatRufe("Masina de spalat rufe frontala", "BEKO", "WWV 980 WPS", "SingleWash, Scurt, Inmuiere, Prespalare, Apa Plus, Ciclu de clatire suplimentara, Foarte silentios, Netezire cu abur, Precalcare, Semnal Acustic, AllergoWash, Miele home, MobileControl, ShopConn@ct, WiFiConnect, Asistent rufe, AddLoad", 9, 1600, "A", 13899.99f, 98, "59.6 x 64.3 x 85", "Alb", "MTouch", 'A', 'A', 25, 15, "QuickPowerWash, Automat Plus, Bumbac, Calcare minima, Delicate, Camasi, Matase (spalare manuala), Rufe din lana (spalare manuala), Express 20, Rufe inchise la culoare, Denim, Aer liber, Impermeabilizare, Imbracaminte sport, Pantofi sport, Pilote de puf, P", "Da", 49, 48, "03:19", 'A', 2400, 5, 1, 12, 24);
        r14 = new MasinaDeSpalatRufe("Masina de spalat rufe frontala", "LG", "F4WV910P2SE", "Aburi, Smart Diagnosis 3.0, Conectivitate Wi-Fi, Adaugare articole, Repornire automata, Pulverizare apa cu detergent prin miscare circulara, Pulverizare multipla 3D, Amanare pornire (3-19 h), Indicator configuratie, Indicator de blocare usa, Indicator si alarma mesaj de eroare, Blocare pentru copii, Semnal sonor pornire/oprire, Anti-incretire, Doar centrifugare, Spalare intensiva, Clatire suplimentara, Posibilitatea descarcarii de programe aditionale (Haine bebelusi, Costume de baie, Echipament sala de sport, Paturi, Articole individuale, Spalare silentioasa, Haine copii, Anotimp ploios, Jeans, Pete de transpiratie, Rufe colorate, Clatire + centrifugare)", 10.5f, 1400, "A", 3999.90f, 70, "60 x 56.5 x 85", "Negru", "Digital", 'A', 'A', 14, 15, "Eco 40-60, Spalare usoara, Curatare cuva, Turbo 39', Spalare silentioasa, Program descarcat (Standard: Clatire + centrifugare), Manual/Lana, Bumbac, Mixte, Plapumi, Antialergic, Articole sportive, Rapid 14', Delicate", "Da", 53, 53, "04:00", 'A', 2200, 4.2f, 5, 12, 24);
        r15 = new MasinaDeSpalatRufe("Masina de spalat rufe frontala", "AEG", "LFR71844BE", "Dispozitiv antiscurgere cu senzor Aqua Control, Tratare pete, Blocare acces copii, Clatire suplimentara, Plus steam, Start/Pauza, Doar clatire, Centrifugare/Evacuare", 8, 1400, "A", 3649.90f, 74.5f, "60 x 60 x 85", "Alb", "LED / Electronic", 'A', 'B', 10, 20, "MixLoad 69min, Eco 40-60, Bumbac, Sintetice, Delicate, Lana, 20 min 3kg, Abur, Jachete, Hygiene", "Da", 42, 42, "03:35", 'B', 2100, 3.86f, 7, 12, 24);

        MasinaDeSpalatRufe[] vectMasinaDeSpalatRufe = {r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15};

        int numarAparitii = 1;
        for (MasinaDeSpalatRufe vectMasinaDeSpalatRufe1 : vectMasinaDeSpalatRufe) {
            boolean b = true;

            if (jRadioButton1.isSelected() && !vectMasinaDeSpalatRufe1.getBrand().equals("BEKO") && !(jRadioButton2.isSelected() && vectMasinaDeSpalatRufe1.getBrand().equals("ELECTROLUX"))) {
                b = false;
            }

            if (jRadioButton2.isSelected() && !vectMasinaDeSpalatRufe1.getBrand().equals("ELECTROLUX") && !(jRadioButton1.isSelected() && vectMasinaDeSpalatRufe1.getBrand().equals("BEKO"))) {
                b = false;
            }

            if (jRadioButton3.isSelected() && !(vectMasinaDeSpalatRufe1.getVitezaCentrifugare() <= 1200) && !(jRadioButton4.isSelected() && vectMasinaDeSpalatRufe1.getVitezaCentrifugare() >= 1400)) {
                b = false;
            }

            if (jRadioButton4.isSelected() && !(vectMasinaDeSpalatRufe1.getVitezaCentrifugare() >= 1400) && !(jRadioButton3.isSelected() && vectMasinaDeSpalatRufe1.getVitezaCentrifugare() <= 1200)) {
                b = false;
            }

            if (jRadioButton5.isSelected() && !(vectMasinaDeSpalatRufe1.getClasaEficientaSpalare() == 'A') && !(jRadioButton6.isSelected() && vectMasinaDeSpalatRufe1.getClasaEficientaSpalare() == 'C')) {
                b = false;
            }

            if (jRadioButton6.isSelected() && !(vectMasinaDeSpalatRufe1.getClasaEficientaSpalare() == 'C') && !(jRadioButton5.isSelected() && vectMasinaDeSpalatRufe1.getClasaEficientaSpalare() == 'A')) {
                b = false;
            }

            if (b == true) {
                Text_MasinaDeSpalatRufe.append("\n" + numarAparitii + "." + vectMasinaDeSpalatRufe1);
                numarAparitii++;
            }
        }
        if (!jRadioButton1.isSelected() && !jRadioButton2.isSelected() && !jRadioButton3.isSelected() && !jRadioButton4.isSelected() && !jRadioButton5.isSelected() && !jRadioButton6.isSelected()) {
            JOptionPane.showMessageDialog(null, "Nu ați ales modalitatea de filtrare", "Eroare", JOptionPane.WARNING_MESSAGE);
            Text_MasinaDeSpalatRufe.setText(null);
        }
    }//GEN-LAST:event_button_MasinaDeSpalatRufeActionPerformed

    private void button_toate_MasinileDeSpalatRufeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_toate_MasinileDeSpalatRufeActionPerformed
        // TODO add your handling code here:
        MasinaDeSpalatRufe r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15;

        r1 = new MasinaDeSpalatRufe("Masina de spalat rufe frontala", "BOSCH", "WAN24167BY", "Child lock, Functie reincarcare, Night Wash, Reminder curatare tambur, Pornire intarziata, Control balans", 8, 1200, "C", 1793.92f, 67.6f, "59.8 x 55 x 84.8", "Alb", "LCD / Touch", 'A', 'B', 15, 15, "Bumbac, Sintetice, Delicate, Super 15'/30', Lana/Spalare manuala, Camasi/Bluze, Sport, Rapid/Mix, Dark wash, Hygiene Plus, Curatare tambur, Night Wash, Centrifugare+Evacuare", "Da", 62, 47, "3:26", 'A', 2300, 4.94f, 16, 12, 24);
        r2 = new MasinaDeSpalatRufe("Masina de spalat rufe frontala", "LG", "F4WV509S2TE", "Pornire intarziata (3-19 h), Child Lock, Doar centrifugare, Start/ Pauza, Alarma eroare, Auto Restart, Semnal sonor pornire/oprire", 9, 1400, "B", 2519.91f, 70, "60 x 56.5 x 85", "Argintiu", "LED/Touch control", 'A', 'B', 14, 59, "Bumbac, Eco 40-60, Mix (Mixed Fabric), Easy Care, Duvet, Tub Clean, Allergy Care, Baby Steam Care, Turbo Wash 59, Sports Wear, Rapid 14', Delicate, Hand / Wool", "Da", 58, 50, "3:48", 'A', 1850, 5, 2, 12, 24);
        r3 = new MasinaDeSpalatRufe("Masina de spalat rufe verticala", "INDESIT", "BTWB7220PEU/N", "Pornire intarziata, Reglare temperatura, Viteza centrifugare, Clatire Intensiva, Optiune energy saver, Calcare usoara", 7, 1200, "E", 1799.90f, 57, "40 x 60 x 90", "Alb", "Digital", 'A', 'C', 15, 15, "Turn & Go, Sintetice, Bumbac, Eco 40-60, Mix 45 min, Articole Sport, 20C, Lana 20, Delicate 30, Colorate 40, Bumbac 30, Sintetice 30, Centrifugare + Evacuare, Clatire + Centrifugare, Eco Bumbac", "Da", 78, 45, "03:25", 'C', 2100, 4.33f, 30, 12, 24);
        r4 = new MasinaDeSpalatRufe("Masina de spalat rufe frontala", "GORENJE", "WNEI74AS", "Protectie la inundatii, Protectie acces copii, Senzor incarcare, Senzor spuma, Senzor nivel apa, Senzor temperatura", 7, 1400, "A", 1948.90f, 65.1f, "60 x 54.5 x 85", "Alb", "LED / Electronic", 'A', 'B', 16, 20, "Bumbac, Program de spalare manual/Lana, Mix/Sintetice, Pets, ExtraHygiene, Haine pentru bebelusi, Daily wash, Program Eco 40-60 C, Rapid 20', PowerWash 59', Program pentru lenjerie, Program pentru uscarea camasilor, SterilTub, Spin/drain, Clatire/Inmuiere", "Da", 45, 45, "3:01", 'B', 1900, 4.6f, 30, 12, 24);
        r5 = new MasinaDeSpalatRufe("Masina de spalat rufe incorporabila", "WHIRLPOOL", "BI WMWG 81484E", "Siguranta copii, Pornire intarziata, Sistem protectie inundatii", 8, 1400, "C", 2349.90f, 66.5f, "59.5 x 54.5 x 81.5", "Alb", "Digital", 'B', 'B', 14, 14, "Mix, Rufe albe, Bumbac, Eco 40-60, Articole sport, Plapumi, 20 C, Centrifugare & evacuare, Clatire & Evacuare, Rapid 30 min, Colours 15, Lana, Delicate, Sintetice, Eco Bumbac", "Da", 63, 48, "03:30", 'A', 1850, 4.64f, 11, 24, 24);
        r6 = new MasinaDeSpalatRufe("Masina de spalat rufe incorporabila", "BEKO", "WITV8712X0W", "DrumClean, Clatire suplimentara, Spalare rapida, Child lock, Sistem automat de reglare al consumului de apa, Sistem control exces apa, Sistem electronic de control al balansului, Afisare timp spalare ramas", 8, 1200, "C", 1462.92f, 71, "60 x 57 x 82", "Alb", "Display / Electronic", 'C', 'B', 15, 15, "Down Wear, Dark Care, Shirts, Sports, Hygiene 20 C, Woollens, Daily Xpress/Xpress Super Short, Mix 40 C, Spalare manuala, Bumbac, Bumbac Eco, Sintetice, Stoarcere si evacuare, Clatire, Lingerie", "Da", 62, 41, "3:38", 'B', 2200, 4, 16, 12, 24);
        r7 = new MasinaDeSpalatRufe("Masina de spalat rufe verticala", "ELECTROLUX", "PerfectCare700 EW7TN3272", "Pete, Clatire suplimentara, Soft Plus, Steam Plus, Start/Pauza", 6, 1200, "B", 2091.31f, 59, "40 x 60 x 89", "Alb", "LCD", 'B', 'B', 14, 14, "Pornit/Oprit, Eco 40-60, Bumbac, Sintetice, Delicate, Abur, Abur pentru casmir, Centrifugare/Evacuare, Clatire, Articole bebelusi, Rapid 14 min, AntiAllergy, Jachete, Denim, Lana/Matase", "Da", 48, 43, "03:15", 'C', 2200, 4.73f, 11, 12, 24);
        r8 = new MasinaDeSpalatRufe("Masina de spalat rufe frontala", "ARCTIC", "APL81223XLAB", "Rapid+, Clatire suplimentara, Antisifonare, Drum Clean cu Extra Steam, Child Lock, Add-In, Amanare pornire, Afisare timp ramas", 8, 1200, "C", 1969.90f, 68, "60 x 55 x 84", "Antracit", "LED", 'C', 'B', 14, 14, "Bumbac, Eco 40-60, Sintetice, Spalare rapida 14', Mixt, Lana, Materiale delicate, Camasi, Geci cu puf, Antialergic+, Anti-pete, Articole iarna, Jeans/ Culori inchise, Clatire, Stoarcere/ Evacuare", "Da", 62, 38, "3:38", 'B', 2200, 5, 5, 12, 24);
        r9 = new MasinaDeSpalatRufe("Masina de spalat rufe frontala", "Samsung", "WW80T4540AX/LE", "Child Lock, Pornire intarziata, Drum Clean, Tambur 2nd Diamond, Prespalare, Rinse+, Smart Check, Sertar StayClean, Steam", 8, 1400, "D", 1899.90f, 68, "60 x 55 x 85", "Inox", "LED / Mecanic", 'C', 'B', 12, 15, "Sintetice, Clatire + Centrifugare, Mixte, Hygiene Steam, Drum Clean, Denim, Colorate, Bumbac, Lenjerii de pat, Rapid 15', Eco 40-60", "Da", 73, 48, "03:38", 'A', 1900, 5, 9, 12, 24);
        r10 = new MasinaDeSpalatRufe("Masina de spalat rufe incorporabila", "BEKO", "WITV8712X0W", "DrumClean, Clatire suplimentara, Spalare rapida, Child lock, Sistem automat de reglare al consumului de apa, Sistem control exces apa, Sistem electronic de control al balansului, Afisare timp spalare ramas", 8, 1400, "C", 1899.90f, 71, "60 x 57 x 82", "Alb", "Display / Electronic", 'C', 'B', 15, 20, "Down Wear, Dark Care, Shirts, Sports, Hygiene 20 C, Woollens, Daily Xpress/Xpress Super Short, Mix 40 C, Spalare manuala, Bumbac, Bumbac Eco, Sintetice, Stoarcere si evacuare, Clatire, Lingerie", "Da", 62, 41, "03:38", 'B', 2200, 4, 16, 12, 24);
        r11 = new MasinaDeSpalatRufe("Masina de spalat rufe verticala", "WHIRLPOOL", "TDLR7220SSEU/N", "Pornire intarziata, Reglare temperatura, Viteza centrifugare, Clatire Intensiva, Soft Opening", 7, 1200, "E", 1999.90f, 57, "40 x 60 x 90", "Alb", "Digital", 'B', 'C', 13, 15, "Mix, Eco 40-60, 20 grade, Rufe colorate, Lana, Centrifugare, Clatire+Centrifugare, Delicate, Igiena, Sintetice, Rapid 30, Bumbac, Eco Bumbac", "Da", 78, 45, "03:25", 'C', 2100, 3.95f, 21, 24, 24);
        r12 = new MasinaDeSpalatRufe("Masina de spalat rufe verticala", "GORENJE", "WNT62112", "Sistem de control al stabilitatii", 6, 1200, "D", 614.35f, 58, "40 x 60 x 90", "Alb", "LED / Mecanic", 'A', 'B', 18, 20, "Bumbac, Sintetice, Rufe delicate si de matase, Lana, Spalare rapida, Spalare Manuala", "Da", 64, 43, "03:15", 'B', 2100, 4.44f, 19, 12, 24);
        r13 = new MasinaDeSpalatRufe("Masina de spalat rufe frontala", "BEKO", "WWV 980 WPS", "SingleWash, Scurt, Inmuiere, Prespalare, Apa Plus, Ciclu de clatire suplimentara, Foarte silentios, Netezire cu abur, Precalcare, Semnal Acustic, AllergoWash, Miele home, MobileControl, ShopConn@ct, WiFiConnect, Asistent rufe, AddLoad", 9, 1600, "A", 13899.99f, 98, "59.6 x 64.3 x 85", "Alb", "MTouch", 'A', 'A', 25, 15, "QuickPowerWash, Automat Plus, Bumbac, Calcare minima, Delicate, Camasi, Matase (spalare manuala), Rufe din lana (spalare manuala), Express 20, Rufe inchise la culoare, Denim, Aer liber, Impermeabilizare, Imbracaminte sport, Pantofi sport, Pilote de puf, P", "Da", 49, 48, "03:19", 'A', 2400, 5, 1, 12, 24);
        r14 = new MasinaDeSpalatRufe("Masina de spalat rufe frontala", "LG", "F4WV910P2SE", "Aburi, Smart Diagnosis 3.0, Conectivitate Wi-Fi, Adaugare articole, Repornire automata, Pulverizare apa cu detergent prin miscare circulara, Pulverizare multipla 3D, Amanare pornire (3-19 h), Indicator configuratie, Indicator de blocare usa, Indicator si alarma mesaj de eroare, Blocare pentru copii, Semnal sonor pornire/oprire, Anti-incretire, Doar centrifugare, Spalare intensiva, Clatire suplimentara, Posibilitatea descarcarii de programe aditionale (Haine bebelusi, Costume de baie, Echipament sala de sport, Paturi, Articole individuale, Spalare silentioasa, Haine copii, Anotimp ploios, Jeans, Pete de transpiratie, Rufe colorate, Clatire + centrifugare)", 10.5f, 1400, "A", 3999.90f, 70, "60 x 56.5 x 85", "Negru", "Digital", 'A', 'A', 14, 15, "Eco 40-60, Spalare usoara, Curatare cuva, Turbo 39', Spalare silentioasa, Program descarcat (Standard: Clatire + centrifugare), Manual/Lana, Bumbac, Mixte, Plapumi, Antialergic, Articole sportive, Rapid 14', Delicate", "Da", 53, 53, "04:00", 'A', 2200, 4.2f, 5, 12, 24);
        r15 = new MasinaDeSpalatRufe("Masina de spalat rufe frontala", "AEG", "LFR71844BE", "Dispozitiv antiscurgere cu senzor Aqua Control, Tratare pete, Blocare acces copii, Clatire suplimentara, Plus steam, Start/Pauza, Doar clatire, Centrifugare/Evacuare", 8, 1400, "A", 3649.90f, 74.5f, "60 x 60 x 85", "Alb", "LED / Electronic", 'A', 'B', 10, 20, "MixLoad 69min, Eco 40-60, Bumbac, Sintetice, Delicate, Lana, 20 min 3kg, Abur, Jachete, Hygiene", "Da", 42, 42, "03:35", 'B', 2100, 3.86f, 7, 12, 24);

        MasinaDeSpalatRufe[] vectMasinaDeSpalatRufe = {r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15};

        int numarAparitii = 1;
        for (MasinaDeSpalatRufe vectMasinaDeSpalatRufe1 : vectMasinaDeSpalatRufe) {

            Text_MasinaDeSpalatRufe.append("\n\n" + numarAparitii + "." + vectMasinaDeSpalatRufe1);
            numarAparitii++;
            jRadioButton1.setSelected(false);
            jRadioButton2.setSelected(false);
            jRadioButton3.setSelected(false);
            jRadioButton4.setSelected(false);
            jRadioButton5.setSelected(false);
            jRadioButton6.setSelected(false);
        }
    }//GEN-LAST:event_button_toate_MasinileDeSpalatRufeActionPerformed

    private void clear_MasinaRufeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_MasinaRufeActionPerformed
        // TODO add your handling code here:
        Text_MasinaDeSpalatRufe.setText(null);
        jRadioButton1.setSelected(false);
        jRadioButton2.setSelected(false);
        jRadioButton3.setSelected(false);
        jRadioButton4.setSelected(false);
        jRadioButton5.setSelected(false);
        jRadioButton6.setSelected(false);
    }//GEN-LAST:event_clear_MasinaRufeActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ElectrocasniceGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ElectrocasniceGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ElectrocasniceGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ElectrocasniceGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ElectrocasniceGUI().setVisible(true);
        });
    }

    public void SwitchAragaz(Aragaz a) {

        try {
            if (jTextField7.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus un brand!\n");
            } else {
                a.setBrand(jTextField7.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField8.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus un tip!\n");
            } else {
                a.setTip(jTextField8.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField9.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus o clasa de eficienta energetica!\n");
            } else {
                a.setClasaEficientaEnergetica(jTextField9.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField10.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus un model!\n");
            } else {
                a.setNumeModel(jTextField10.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField11.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus o culoare!\n");
            } else {
                a.setCuloare(jTextField11.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField12.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus macar o functie!\n");
            } else {
                a.setFunctii(jTextField12.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField13.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus capacitatea!\n");
            } else {
                a.setCapacitate(Float.parseFloat(jTextField13.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField14.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus un total al recenziilor!\n");
            } else {
                a.setRecenziiTotal(Integer.parseInt(jTextField14.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField15.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus numarul de recenzii!\n");
            } else {
                a.setRecenzii(Float.parseFloat(jTextField15.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField16.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus pretul!\n");
            } else {
                a.setPret(Float.parseFloat(jTextField16.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField17.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus dimensiunea!\n");
            } else {
                a.setDimensiune(jTextField17.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField18.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus greutatea!\n");
            } else {
                a.setGreutate(Float.parseFloat(jTextField18.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField19.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus garantia pentru persoanele fizice!\n");
            } else {
                a.setGarantiePersoaneFizice(Integer.parseInt(jTextField19.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField20.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus garantia pentru persoanele juridice!\n");
            } else {
                a.setGarantiePersoaneJuridice(Integer.parseInt(jTextField20.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField21.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus numarul de arzatoare!\n");
            } else {
                a.setNumar_arzatoare(Integer.parseInt(jTextField21.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField22.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus tipul de alimentare!\n");
            } else {
                a.setTipAlimentare(jTextField22.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField23.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus daca are rotisor!\n");
            } else {
                a.setRotisor(Boolean.parseBoolean(jTextField23.getText()));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField24.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus daca are grill!\n");
            } else {
                a.setGrill(Boolean.parseBoolean(jTextField24.getText()));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField25.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus tipul plitei!\n");
            } else {
                a.setTipPlita(jTextField25.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField26.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus tipul cuptorului!\n");
            } else {
                a.setTipCuptor(jTextField26.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField27.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus daca are autocuratare!\n");
            } else {
                a.setAutocuratare(jTextField27.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField28.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus puterea!\n");
            } else {
                a.setPutere(Float.parseFloat(jTextField28.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField29.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus tensiunea!\n");
            } else {
                a.setTensiune(Float.parseFloat(jTextField29.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        if (jTextField7.getText().isEmpty() == false && jTextField8.getText().isEmpty() == false && jTextField9.getText().isEmpty() == false && jTextField10.getText().isEmpty() == false && jTextField11.getText().isEmpty() == false && jTextField12.getText().isEmpty() == false && jTextField13.getText().isEmpty() == false && jTextField14.getText().isEmpty() == false && jTextField15.getText().isEmpty() == false && jTextField16.getText().isEmpty() == false && jTextField17.getText().isEmpty() == false && jTextField18.getText().isEmpty() == false && jTextField19.getText().isEmpty() == false && jTextField20.getText().isEmpty() == false && jTextField21.getText().isEmpty() == false && jTextField22.getText().isEmpty() == false && jTextField23.getText().isEmpty() == false && jTextField24.getText().isEmpty() == false && jTextField25.getText().isEmpty() == false && jTextField26.getText().isEmpty() == false && jTextField27.getText().isEmpty() == false && jTextField28.getText().isEmpty() == false && jTextField29.getText().isEmpty() == false) {
            ScriereAragaz(a);
            jTextAreaFisiere.append(a.toString());
        }
    }

    private void SwitchCuptor(Cuptor c) {
        try {
            if (jTextField7.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus un brand!\n");
            } else {
                c.setBrand(jTextField7.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField8.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus un tip!\n");
            } else {
                c.setTip(jTextField8.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField9.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus o clasa de eficienta energetica!\n");
            } else {
                c.setClasaEficientaEnergetica(jTextField9.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField10.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus un model!\n");
            } else {
                c.setNumeModel(jTextField10.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField11.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus o culoare!\n");
            } else {
                c.setCuloare(jTextField11.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField12.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus macar o functie!\n");
            } else {
                c.setFunctii(jTextField12.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField13.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus capacitatea!\n");
            } else {
                c.setCapacitate(Float.parseFloat(jTextField13.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField14.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus un total al recenziilor!\n");
            } else {
                c.setRecenziiTotal(Integer.parseInt(jTextField14.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField15.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus numarul de recenzii!\n");
            } else {
                c.setRecenzii(Float.parseFloat(jTextField15.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField16.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus pretul!\n");
            } else {
                c.setPret(Float.parseFloat(jTextField16.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField17.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus dimensiunea!\n");
            } else {
                c.setDimensiune(jTextField17.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField18.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus greutatea!\n");
            } else {
                c.setGreutate(Float.parseFloat(jTextField18.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField19.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus garantia pentru persoanele fizice!\n");
            } else {
                c.setGarantiePersoaneFizice(Integer.parseInt(jTextField19.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField20.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus garantia pentru persoanele juridice!\n");
            } else {
                c.setGarantiePersoaneJuridice(Integer.parseInt(jTextField20.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField21.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus tipul de curatare!\n");
            } else {
                c.setTipCuratare(jTextField21.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField22.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus tipul de inchidere a usii!\n");
            } else {
                c.setTipInchidereUsa(jTextField22.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField23.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus numarul de functii!\n");
            } else {
                c.setNrFunctii(Integer.parseInt(jTextField23.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField24.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus afisajul de panou comanda!\n");
            } else {
                c.setAfisajPanouComanda(jTextField24.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField25.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus daca are timer!\n");
            } else {
                c.setTimer(Boolean.parseBoolean(jTextField25.getText()));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField26.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus puterea!\n");
            } else {
                c.setPutere(Float.parseFloat(jTextField26.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField27.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus tensiunea!\n");
            } else {
                c.setTensiune(Float.parseFloat(jTextField27.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField28.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus frecventa!\n");
            } else {
                c.setFrecventa(Float.parseFloat(jTextField28.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        if (jTextField7.getText().isEmpty() == false && jTextField8.getText().isEmpty() == false && jTextField9.getText().isEmpty() == false && jTextField10.getText().isEmpty() == false && jTextField11.getText().isEmpty() == false && jTextField12.getText().isEmpty() == false && jTextField13.getText().isEmpty() == false && jTextField14.getText().isEmpty() == false && jTextField15.getText().isEmpty() == false && jTextField16.getText().isEmpty() == false && jTextField17.getText().isEmpty() == false && jTextField18.getText().isEmpty() == false && jTextField19.getText().isEmpty() == false && jTextField20.getText().isEmpty() == false && jTextField21.getText().isEmpty() == false && jTextField22.getText().isEmpty() == false && jTextField23.getText().isEmpty() == false && jTextField24.getText().isEmpty() == false && jTextField25.getText().isEmpty() == false && jTextField26.getText().isEmpty() == false && jTextField27.getText().isEmpty() == false && jTextField28.getText().isEmpty() == false) {
            ScriereCuptor(c);
            jTextAreaFisiere.append(c.toString());
        }

    }

    public static void ScriereMasinaDeSpalatRufe(MasinaDeSpalatRufe obj) {
        try (final FileOutputStream fout = new FileOutputStream("MasinaDeSpalatRufe3.txt", true); final AppendingObjectOutputStream out = new AppendingObjectOutputStream(new BufferedOutputStream(fout))) {
            out.writeObject(obj);
            out.flush();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public static void ScriereMasinaDeSpalatVase(MasinaDeSpalatVase obj) {
        try (final FileOutputStream fout = new FileOutputStream("MasinaDeSpalatVase4.txt", true); final AppendingObjectOutputStream out = new AppendingObjectOutputStream(new BufferedOutputStream(fout))) {
            out.writeObject(obj);
            out.flush();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public static void ScriereAragaz(Aragaz obj) {
        try (final FileOutputStream fout = new FileOutputStream("Aragaz1.txt", true); final AppendingObjectOutputStream out = new AppendingObjectOutputStream(new BufferedOutputStream(fout))) {
            out.writeObject(obj);
            out.flush();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public static void ScriereCuptor(Cuptor obj) {
        try (final FileOutputStream fout = new FileOutputStream("Cuptor2.txt", true); final AppendingObjectOutputStream out = new AppendingObjectOutputStream(new BufferedOutputStream(fout))) {
            out.writeObject(obj);
            out.flush();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public static void ScriereFrigider(Frigider obj) {
        try (final FileOutputStream fout = new FileOutputStream("Frigider5.txt", true); final AppendingObjectOutputStream out = new AppendingObjectOutputStream(new BufferedOutputStream(fout))) {
            out.writeObject(obj);
            out.flush();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public static void ScriereCongelator(Congelator obj) {
        try (final FileOutputStream fout = new FileOutputStream("Congelator6.txt", true); final AppendingObjectOutputStream out = new AppendingObjectOutputStream(new BufferedOutputStream(fout))) {
            out.writeObject(obj);
            out.flush();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public ArrayList<Object> Citire(String filepath) {
        ArrayList<Object> objects = new ArrayList<>();

        try (FileInputStream fileIn = new FileInputStream(filepath); 
                ObjectInputStream objectIn = new ObjectInputStream(fileIn)) {
            while (true) {
                try {
                    Object obj = objectIn.readObject();
                    objects.add(obj);
                } catch (EOFException eof) {
                    break;
                }
            }
        } catch (IOException | ClassNotFoundException ex) {
            ex.printStackTrace();
        }
        return objects;
    }

    public void Ascunde() {
        jLabel8.setVisible(false);
        jTextField7.setVisible(false);
        jLabel9.setVisible(false);
        jTextField8.setVisible(false);
        jLabel10.setVisible(false);
        jTextField9.setVisible(false);
        jLabel11.setVisible(false);
        jTextField10.setVisible(false);
        jLabel12.setVisible(false);
        jTextField11.setVisible(false);
        jLabel13.setVisible(false);
        jTextField12.setVisible(false);
        jLabel14.setVisible(false);
        jTextField13.setVisible(false);
        jLabel15.setVisible(false);
        jTextField14.setVisible(false);
        jLabel16.setVisible(false);
        jTextField15.setVisible(false);
        jLabel17.setVisible(false);
        jTextField16.setVisible(false);
        jLabel18.setVisible(false);
        jTextField17.setVisible(false);
        jLabel19.setVisible(false);
        jTextField18.setVisible(false);
        jLabel20.setVisible(false);
        jTextField19.setVisible(false);
        jLabel21.setVisible(false);
        jTextField20.setVisible(false);
        jLabel22.setVisible(false);
        jTextField21.setVisible(false);
        jLabel23.setVisible(false);
        jTextField22.setVisible(false);
        jLabel24.setVisible(false);
        jTextField23.setVisible(false);
        jLabel25.setVisible(false);
        jTextField24.setVisible(false);
        jLabel26.setVisible(false);
        jTextField25.setVisible(false);
        jLabel27.setVisible(false);
        jTextField26.setVisible(false);
        jLabel28.setVisible(false);
        jTextField27.setVisible(false);
        jLabel29.setVisible(false);
        jTextField28.setVisible(false);
        jLabel30.setVisible(false);
        jTextField29.setVisible(false);
        jLabel31.setVisible(false);
        jTextField30.setVisible(false);
        jLabel32.setVisible(false);
        jTextField31.setVisible(false);
        jLabel33.setVisible(false);
        jTextField32.setVisible(false);
        jLabel34.setVisible(false);
        jTextField33.setVisible(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Text_MasinaDeSpalatRufe;
    private javax.swing.JTextArea Text_MasinaDeSpalatVase;
    private javax.swing.JButton btnAragaz;
    private javax.swing.JButton btnAragaz6;
    private javax.swing.JButton button_Congelator;
    private javax.swing.JButton button_MasinaDeSpalatRufe;
    private javax.swing.JButton button_MasinaDeSpalatVase;
    private javax.swing.JButton button_frigider;
    private javax.swing.JButton button_toateCongelatoarele;
    private javax.swing.JButton button_toateFrigiderele;
    private javax.swing.JButton button_toate_MasinileDeSpalatRufe;
    private javax.swing.JButton button_toate_MasinileDeSpalatVase;
    private javax.swing.JButton clear_MasinaRufe;
    private javax.swing.JButton clear_MasinaVase;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButtonCitire;
    private javax.swing.JButton jButtonScriere;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox10;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton10;
    private javax.swing.JRadioButton jRadioButton11;
    private javax.swing.JRadioButton jRadioButton12;
    private javax.swing.JRadioButton jRadioButton13;
    private javax.swing.JRadioButton jRadioButton14;
    private javax.swing.JRadioButton jRadioButton15;
    private javax.swing.JRadioButton jRadioButton16;
    private javax.swing.JRadioButton jRadioButton17;
    private javax.swing.JRadioButton jRadioButton18;
    private javax.swing.JRadioButton jRadioButton19;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton20;
    private javax.swing.JRadioButton jRadioButton21;
    private javax.swing.JRadioButton jRadioButton22;
    private javax.swing.JRadioButton jRadioButton23;
    private javax.swing.JRadioButton jRadioButton24;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JRadioButton jRadioButton7;
    private javax.swing.JRadioButton jRadioButton8;
    private javax.swing.JRadioButton jRadioButton9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea5;
    private javax.swing.JTextArea jTextArea9;
    private javax.swing.JTextArea jTextAreaFisiere;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JTextField jTextField23;
    private javax.swing.JTextField jTextField24;
    private javax.swing.JTextField jTextField25;
    private javax.swing.JTextField jTextField26;
    private javax.swing.JTextField jTextField27;
    private javax.swing.JTextField jTextField28;
    private javax.swing.JTextField jTextField29;
    private javax.swing.JTextField jTextField30;
    private javax.swing.JTextField jTextField31;
    private javax.swing.JTextField jTextField32;
    private javax.swing.JTextField jTextField33;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JCheckBox jc1;
    private javax.swing.JCheckBox jc2;
    private javax.swing.JCheckBox jc3;
    private javax.swing.JCheckBox jc4;
    private javax.swing.JCheckBox jc5;
    private javax.swing.JCheckBox jc6;
    private javax.swing.JCheckBox jc7;
    // End of variables declaration//GEN-END:variables

    private void SwitchMasinaDeSpalatRufe(MasinaDeSpalatRufe r) {
        try {
            if (jTextField7.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus un brand!\n");
            } else {
                r.setBrand(jTextField7.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField8.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus un tip!\n");
            } else {
                r.setTip(jTextField8.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField9.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus o clasa de eficienta energetica!\n");
            } else {
                r.setClasaEficientaEnergetica(jTextField9.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField10.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus un model!\n");
            } else {
                r.setNumeModel(jTextField10.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField11.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus o culoare!\n");
            } else {
                r.setCuloare(jTextField11.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField12.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus macar o functie!\n");
            } else {
                r.setFunctii(jTextField12.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField13.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus capacitatea!\n");
            } else {
                r.setCapacitate(Float.parseFloat(jTextField13.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField14.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus un total al recenziilor!\n");
            } else {
                r.setRecenziiTotal(Integer.parseInt(jTextField14.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField15.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus numarul de recenzii!\n");
            } else {
                r.setRecenzii(Float.parseFloat(jTextField15.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField16.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus pretul!\n");
            } else {
                r.setPret(Float.parseFloat(jTextField16.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField17.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus dimensiunea!\n");
            } else {
                r.setDimensiune(jTextField17.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField18.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus greutatea!\n");
            } else {
                r.setGreutate(Float.parseFloat(jTextField18.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField19.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus garantia pentru persoanele fizice!\n");
            } else {
                r.setGarantiePersoaneFizice(Integer.parseInt(jTextField19.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField20.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus garantia pentru persoanele juridice!\n");
            } else {
                r.setGarantiePersoaneJuridice(Integer.parseInt(jTextField20.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField21.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus viteza de centrifugare!\n");
            } else {
                r.setVitezaCentrifugare(Integer.parseInt(jTextField21.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField22.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus tipul de afisaj!\n");
            } else {
                r.setAfisaj(jTextField22.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField23.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus clasa de eficienta pentru spalare!\n");
            } else {
                r.setClasaEficientaSpalare(jTextField23.getText().charAt(0));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField24.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus clasa de eficienta pentru stoarcere!\n");
            } else {
                r.setClasaEficientaStoarcere(jTextField24.getText().charAt(0));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField25.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus clasa de emisie pentru zgomot!\n");
            } else {
                r.setClasaEmisieZgomot(jTextField25.getText().charAt(0));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField26.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus numarul de programe!\n");
            } else {
                r.setNumarPrograme(Integer.parseInt(jTextField26.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField27.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus un program rapid!\n");
            } else {
                r.setProgramRapid(Integer.parseInt(jTextField27.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField28.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus programe de spalare!\n");
            } else {
                r.setProgrameSpalare(jTextField28.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField29.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus functii de prespalare!\n");
            } else {
                r.setFunctiiPrespalare(jTextField29.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField30.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus consumul de energie!\n");
            } else {
                r.setConsumEnergie(Integer.parseInt(jTextField30.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField31.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus consumul de apa!\n");
            } else {
                r.setConsumApa(Integer.parseInt(jTextField31.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField32.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus durata programului Eco!\n");
            } else {
                r.setDurataProgramEco(jTextField32.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField33.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus puterea!\n");
            } else {
                r.setPutere(Integer.parseInt(jTextField33.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        if (jTextField7.getText().isEmpty() == false && jTextField8.getText().isEmpty() == false && jTextField9.getText().isEmpty() == false && jTextField10.getText().isEmpty() == false && jTextField11.getText().isEmpty() == false && jTextField12.getText().isEmpty() == false && jTextField13.getText().isEmpty() == false && jTextField14.getText().isEmpty() == false && jTextField15.getText().isEmpty() == false && jTextField16.getText().isEmpty() == false && jTextField17.getText().isEmpty() == false && jTextField18.getText().isEmpty() == false && jTextField19.getText().isEmpty() == false && jTextField20.getText().isEmpty() == false && jTextField21.getText().isEmpty() == false && jTextField22.getText().isEmpty() == false && jTextField23.getText().isEmpty() == false && jTextField24.getText().isEmpty() == false && jTextField25.getText().isEmpty() == false && jTextField26.getText().isEmpty() == false && jTextField27.getText().isEmpty() == false && jTextField28.getText().isEmpty() == false && jTextField29.getText().isEmpty() == false && jTextField30.getText().isEmpty() == false && jTextField31.getText().isEmpty() == false && jTextField32.getText().isEmpty() == false && jTextField33.getText().isEmpty() == false) {
            ScriereMasinaDeSpalatRufe(r);
            jTextAreaFisiere.append(r.toString());
        }
    }

    private void SwitchMasinaDeSpalatVase(MasinaDeSpalatVase v) {
        try {
            if (jTextField7.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus un brand!\n");
            } else {
                v.setBrand(jTextField7.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField8.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus un tip!\n");
            } else {
                v.setTip(jTextField8.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField9.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus o clasa de eficienta energetica!\n");
            } else {
                v.setClasaEficientaEnergetica(jTextField9.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField10.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus un model!\n");
            } else {
                v.setNumeModel(jTextField10.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField11.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus o culoare!\n");
            } else {
                v.setCuloare(jTextField11.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField12.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus macar o functie!\n");
            } else {
                v.setFunctii(jTextField12.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField13.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus o capacitate!\n");
            } else {
                v.setCapacitate(Float.parseFloat(jTextField13.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField14.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus un total al recenziilor!\n");
            } else {
                v.setRecenziiTotal(Integer.parseInt(jTextField14.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField15.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus numarul de recenzii!\n");
            } else {
                v.setRecenzii(Float.parseFloat(jTextField15.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField16.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus pretul!\n");
            } else {
                v.setPret(Float.parseFloat(jTextField16.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField17.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus o dimensiune!\n");
            } else {
                v.setDimensiune(jTextField17.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField18.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus o greutate!\n");
            } else {
                v.setGreutate(Float.parseFloat(jTextField18.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField19.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus garantia pentru persoanele fizice!\n");
            } else {
                v.setGarantiePersoaneFizice(Integer.parseInt(jTextField19.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField20.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus garantia pentru persoanele juridice!\n");
            } else {
                v.setGarantiePersoaneJuridice(Integer.parseInt(jTextField20.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField21.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus numarul de programe!\n");
            } else {
                v.setNumarPrograme(Integer.parseInt(jTextField21.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField22.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus tipul de afisaj!\n");
            } else {
                v.setAfisaj(jTextField22.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField23.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus numarul de cosuri!\n");
            } else {
                v.setNumarCosuri(Integer.parseInt(jTextField23.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField24.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus un programator!\n");
            } else {
                v.setProgramator(jTextField24.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField25.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus materialul cuvei!\n");
            } else {
                v.setMaterialCuva(jTextField25.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField26.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus programele!\n");
            } else {
                v.setPrograme(jTextField26.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField27.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus clasa de eficienta pentru spalare!\n");
            } else {
                v.setClasaEficientaSpalare(jTextField27.getText().charAt(0));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField28.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus clasa de eficienta pentru uscare!\n");
            } else {
                v.setClasaEficientaUscare(jTextField28.getText().charAt(0));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField32.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus durata programului Eco!\n");
            } else {
                v.setDurataProgramEco(jTextField32.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField30.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus consumul energetic!\n");
            } else {
                v.setConsumEnergetic(Integer.parseInt(jTextField30.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField31.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus consumul de apa!\n");
            } else {
                v.setConsumApa(Float.parseFloat(jTextField31.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField29.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus clasa de emisie pentru zgomot!\n");
            } else {
                v.setClasaEmisieZgomot(jTextField29.getText().charAt(0));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField33.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus puterea!\n");
            } else {
                v.setPutere(Integer.parseInt(jTextField33.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        if (jTextField7.getText().isEmpty() == false && jTextField8.getText().isEmpty() == false && jTextField9.getText().isEmpty() == false && jTextField10.getText().isEmpty() == false && jTextField11.getText().isEmpty() == false && jTextField12.getText().isEmpty() == false && jTextField13.getText().isEmpty() == false && jTextField14.getText().isEmpty() == false && jTextField15.getText().isEmpty() == false && jTextField16.getText().isEmpty() == false && jTextField17.getText().isEmpty() == false && jTextField18.getText().isEmpty() == false && jTextField19.getText().isEmpty() == false && jTextField20.getText().isEmpty() == false && jTextField21.getText().isEmpty() == false && jTextField22.getText().isEmpty() == false && jTextField23.getText().isEmpty() == false && jTextField24.getText().isEmpty() == false && jTextField25.getText().isEmpty() == false && jTextField26.getText().isEmpty() == false && jTextField27.getText().isEmpty() == false && jTextField28.getText().isEmpty() == false && jTextField29.getText().isEmpty() == false && jTextField30.getText().isEmpty() == false && jTextField31.getText().isEmpty() == false && jTextField32.getText().isEmpty() == false && jTextField33.getText().isEmpty() == false) {
            ScriereMasinaDeSpalatVase(v);
            jTextAreaFisiere.append(v.toString());
        }
    }

    private void SwitchFrigider(Frigider f) {
        try {
            if (jTextField7.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus un brand!\n");
            } else {
                f.setBrand(jTextField7.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField8.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus un tip!\n");
            } else {
                f.setTip(jTextField8.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField9.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus o clasa de eficienta energetica!\n");
            } else {
                f.setClasaEficientaEnergetica(jTextField9.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField10.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus un model!\n");
            } else {
                f.setNumeModel(jTextField10.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField11.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus o culoare!\n");
            } else {
                f.setCuloare(jTextField11.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField12.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus macar o functie!\n");
            } else {
                f.setFunctii(jTextField12.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField13.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus o capacitate!\n");
            } else {
                f.setCapacitate(Float.parseFloat(jTextField13.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField14.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus un total al recenziilor!\n");
            } else {
                f.setRecenziiTotal(Integer.parseInt(jTextField14.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField15.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus numarul de recenzii!\n");
            } else {
                f.setRecenzii(Float.parseFloat(jTextField15.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField16.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus pretul!\n");
            } else {
                f.setPret(Float.parseFloat(jTextField16.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField17.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus o dimensiune!\n");
            } else {
                f.setDimensiune(jTextField17.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField18.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus o greutate!\n");
            } else {
                f.setGreutate(Float.parseFloat(jTextField18.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField19.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus garantia pentru persoanele fizice!\n");
            } else {
                f.setGarantiePersoaneFizice(Integer.parseInt(jTextField19.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField20.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus garantia pentru persoanele juridice!\n");
            } else {
                f.setGarantiePersoaneJuridice(Integer.parseInt(jTextField20.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField21.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus daca are congelator!\n");
            } else {
                f.setHasFreezer(Boolean.parseBoolean(jTextField21.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField22.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus tipul de sistem de racire!\n");
            } else {
                f.setSistemDeRacire(jTextField22.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField23.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus numarul de compresoare!\n");
            } else {
                f.setNumarCompresoare(Integer.parseInt(jTextField23.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField24.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus tipul de control al temperaturii!\n");
            } else {
                f.setControlTemperatura(jTextField24.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField25.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus numarul de rafturi!\n");
            } else {
                f.setNrRafturi(Integer.parseInt(jTextField25.getText()));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField26.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus daca are dozator de apa!\n");
            } else {
                f.setDozatorApa(Boolean.parseBoolean(jTextField26.getText()));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField27.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus daca are cutie pentru fructe si legume!\n");
            } else {
                f.setCutieFructesiLegume(Boolean.parseBoolean(jTextField27.getText()));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField28.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus nivelul de zgomot!\n");
            } else {
                f.setNivelZgomot(Integer.parseInt(jTextField28.getText()));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        if (jTextField7.getText().isEmpty() == false && jTextField8.getText().isEmpty() == false && jTextField9.getText().isEmpty() == false && jTextField10.getText().isEmpty() == false && jTextField11.getText().isEmpty() == false && jTextField12.getText().isEmpty() == false && jTextField13.getText().isEmpty() == false && jTextField14.getText().isEmpty() == false && jTextField15.getText().isEmpty() == false && jTextField16.getText().isEmpty() == false && jTextField17.getText().isEmpty() == false && jTextField18.getText().isEmpty() == false && jTextField19.getText().isEmpty() == false && jTextField20.getText().isEmpty() == false && jTextField21.getText().isEmpty() == false && jTextField22.getText().isEmpty() == false && jTextField23.getText().isEmpty() == false && jTextField24.getText().isEmpty() == false && jTextField25.getText().isEmpty() == false && jTextField26.getText().isEmpty() == false && jTextField27.getText().isEmpty() == false && jTextField28.getText().isEmpty() == false) {
            ScriereFrigider(f);
            jTextAreaFisiere.append(f.toString());
        }
    }

    private void SwitchCongelator(Congelator cg) {
        try {
            if (jTextField7.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus un brand!\n");
            } else {
                cg.setBrand(jTextField7.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField8.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus un tip!\n");
            } else {
                cg.setTip(jTextField8.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField9.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus o clasa de eficienta energetica!\n");
            } else {
                cg.setClasaEficientaEnergetica(jTextField9.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField10.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus un model!\n");
            } else {
                cg.setNumeModel(jTextField10.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField11.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus o culoare!\n");
            } else {
                cg.setCuloare(jTextField11.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField12.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus macar o functie!\n");
            } else {
                cg.setFunctii(jTextField12.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField13.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus o capacitate!\n");
            } else {
                cg.setCapacitate(Float.parseFloat(jTextField13.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField14.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus un total al recenziilor!\n");
            } else {
                cg.setRecenziiTotal(Integer.parseInt(jTextField14.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField15.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus numarul de recenzii!\n");
            } else {
                cg.setRecenzii(Float.parseFloat(jTextField15.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField16.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus pretul!\n");
            } else {
                cg.setPret(Float.parseFloat(jTextField16.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField17.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus o dimensiune!\n");
            } else {
                cg.setDimensiune(jTextField17.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField18.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus o greutate!\n");
            } else {
                cg.setGreutate(Float.parseFloat(jTextField18.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField19.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus garantia pentru persoanele fizice!\n");
            } else {
                cg.setGarantiePersoaneFizice(Integer.parseInt(jTextField19.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField20.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus garantia pentru persoanele juridice!\n");
            } else {
                cg.setGarantiePersoaneJuridice(Integer.parseInt(jTextField20.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField21.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus tipul de sistem de racire!\n");
            } else {
                cg.setSistemDeRacire(jTextField21.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField22.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus numarul de compresoare!\n");
            } else {
                cg.setNumarCompresoare(Integer.parseInt(jTextField22.getText()));
            }
        } catch (Exception e) {
            jTextAreaFisiere.append(e.getMessage());
        }

        try {
            if (jTextField23.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus tipul de control al temperaturii!\n");
            } else {
                cg.setControlTemperatura(jTextField23.getText());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField24.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus numarul de rafturi!\n");
            } else {
                cg.setNrRafturi(Integer.parseInt(jTextField24.getText()));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField25.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus daca are cutie pentru fructe si legume!\n");
            } else {
                cg.setCutieFructesiLegume(Boolean.parseBoolean(jTextField25.getText()));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            if (jTextField26.getText().isEmpty()) {
                jTextAreaFisiere.append("Nu ati introdus nivelul de zgomot!\n");
            } else {
                cg.setNivelZgomot(Integer.parseInt(jTextField26.getText()));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        if (jTextField7.getText().isEmpty() == false && jTextField8.getText().isEmpty() == false && jTextField9.getText().isEmpty() == false && jTextField10.getText().isEmpty() == false && jTextField11.getText().isEmpty() == false && jTextField12.getText().isEmpty() == false && jTextField13.getText().isEmpty() == false && jTextField14.getText().isEmpty() == false && jTextField15.getText().isEmpty() == false && jTextField16.getText().isEmpty() == false && jTextField17.getText().isEmpty() == false && jTextField18.getText().isEmpty() == false && jTextField19.getText().isEmpty() == false && jTextField20.getText().isEmpty() == false && jTextField21.getText().isEmpty() == false && jTextField22.getText().isEmpty() == false && jTextField23.getText().isEmpty() == false && jTextField24.getText().isEmpty() == false && jTextField25.getText().isEmpty() == false && jTextField26.getText().isEmpty() == false) {
            ScriereCongelator(cg);
            jTextAreaFisiere.append(cg.toString());
        }
    }
}
